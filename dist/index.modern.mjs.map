{"version":3,"file":"index.modern.mjs","sources":["../src/utils.tsx","../src/next/utils.ts","../src/components/utils/withDefaultValue.tsx","../src/components/utils/withAttributes.tsx","../src/components/utils/withStates.tsx","../src/components/wrappers/WebformElementWrapper.tsx","../src/components/wrappers/WebformFieldsetWrapper.tsx","../src/components/utils/withWrapper.tsx","../src/components/WebformAutocomplete.tsx","../src/components/WebformText.tsx","../src/components/WebformSelect.tsx","../src/components/WebformTextArea.tsx","../src/components/WebformDebug.tsx","../src/WebformElement.tsx","../src/components/WebformMultifield.tsx","../src/components/WebformComposite.tsx","../src/components/WebformContainer.tsx","../src/components/WebformFlexboxLayout.tsx","../src/components/WebformFieldset.tsx","../src/components/WebformSection.tsx","../src/components/WebformTable.tsx","../src/components/WebformRange.tsx","../src/components/WebformCheckbox.tsx","../src/components/WebformRating.tsx","../src/components/WebformEmailConfirm.tsx","../src/components/WebformValue.tsx","../src/components/Modal.tsx","../src/components/WebformTermsOfService.tsx","../src/components/WebformDateTime.tsx","../src/components/WebformTime.tsx","../src/components/WebformDateList.tsx","../src/components/WebformDate.tsx","../src/components/WebformItem.tsx","../src/components/WebformActions.tsx","../src/components/WebformCheckboxRadioGroup.tsx","../src/components/WebformMarkup.tsx","../src/components/WebformMessage.tsx","../src/components/WebformButton.tsx","../src/components/WebformTableRow.tsx","../src/components/ConfirmationPage.tsx","../src/components/DebugConfirmation.tsx","../src/components/WizardPage.tsx","../src/components/MultiPageForm.tsx","../src/components/FormLayout.tsx","../src/components/index.ts","../src/components/WebformCustomComposite.tsx","../src/components/Message.tsx","../src/ComponentRegistry.ts","../src/Webform.tsx","../src/examples/WebformHeight.tsx","../src/next/WebformDefaultApiRoute.ts"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport deepmerge from 'deepmerge';\nimport { ErrorObjectType, WebformContextType } from './types';\nimport strtotime from 'strtotime';\n\nexport function getChildElements(containerElement): Array<string | number> {\n  const count = Object.keys(containerElement).length;\n  let i = 0;\n  const childWeights = [];\n  for (const key of Object.keys(containerElement)) {\n    if (key.charAt(0) === '#') {\n      continue;\n    }\n\n    // Skip `type` key since it's reserved for this application.\n    // @todo should we get rid of this?\n    // @see WebformElementType\n    if (key === 'type') {\n      continue;\n    }\n\n    const element = containerElement[key];\n    let weight;\n    if (typeof element['#weight'] !== 'undefined') {\n      weight = element['#weight'];\n    } else {\n      weight = 0;\n    }\n    // Supports weight with up to three digit precision and conserve\n    // the insertion order.\n    childWeights.push({\n      weight: Math.floor(weight * 1000) + i / count,\n      key,\n    });\n    i++;\n  }\n  childWeights.sort((a, b) => {\n    return a.weight - b.weight;\n  });\n\n  return childWeights.map((childWeight) => {\n    return childWeight.key;\n  });\n}\n\nexport const WebformContext = React.createContext<WebformContextType | null>(\n  null,\n);\n\nconst drupalRenderedMarkup = (message: string): React.ReactNode => {\n  return (\n    <div\n      dangerouslySetInnerHTML={{\n        __html: message,\n      }}\n    />\n  );\n};\n\nexport const getNormalizedErrorMessages = (errors): ErrorObjectType => {\n  if (!errors) {\n    return null;\n  }\n\n  return Object.keys(errors).reduce((currentValue, key) => {\n    const parts = key.split('][');\n    if (parts.length > 1) {\n      if (!currentValue[parts[0]]) {\n        currentValue[parts[0]] = {};\n      }\n\n      if (parts.length === 2) {\n        // This is handling the field cardinality data structure:\n        // `${id}][items][{$i}][_item_` when `_item_` is a primitive value.\n        if (parts[1] === '_item_') {\n          currentValue[parts[0]] = drupalRenderedMarkup(errors[key]);\n        } else {\n          currentValue[parts[0]][parts[1]] = drupalRenderedMarkup(errors[key]);\n        }\n      } else {\n        // This is handling the field cardinality data structure:\n        // `${id}][items][{$i}][_item_`, and cases where field cardinality has\n        // structured data, e.g. composite element.\n        if (parts[1] === 'items' || parts[1] === '_item_') {\n          const newKey = [...parts.slice(2)].join('][');\n          currentValue[parts[0]] = {\n            ...currentValue[parts[0]],\n            ...getNormalizedErrorMessages({\n              [newKey]: errors[key],\n            }),\n          };\n        } else {\n          const newKey = [...parts.slice(1)].join('][');\n          currentValue[parts[0]] = {\n            ...currentValue[parts[0]],\n            ...getNormalizedErrorMessages({\n              ...currentValue[parts[0]],\n              [newKey]: errors[key],\n            }),\n          };\n        }\n      }\n    } else {\n      currentValue[key] = drupalRenderedMarkup(errors[key]);\n    }\n\n    return currentValue;\n  }, {});\n};\n\nexport function toPath(key: string): Array<string> {\n  return key.split('][');\n}\n\nexport function toKey(path: Array<string>): string {\n  return path\n    .filter((item) => item !== 'items' && item !== '_item_')\n    .join('][');\n}\n\nexport function setIn(obj: object, path: string, value: unknown) {\n  const pathArray = toPath(path);\n  let current = obj;\n  for (let i = 0; i < pathArray.length; i++) {\n    const currentPath: string = pathArray[i];\n    if (pathArray.length - 1 === i) {\n      current[currentPath] = value;\n    } else {\n      if (!current[currentPath]) {\n        const nextPath: string = pathArray[i + 1];\n        if (isInteger(nextPath) && Number(nextPath) >= 0) {\n          current[currentPath] = [];\n        } else {\n          current[currentPath] = {};\n        }\n      }\n    }\n    current = current[currentPath];\n  }\n\n  return obj;\n}\n\nexport function isObject(item) {\n  return typeof item === 'object' && !Array.isArray(item) && item !== null;\n}\n\nexport const isInteger = (obj: unknown): boolean =>\n  Number.isInteger(obj) || String(Math.floor(Number(obj))) === obj;\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isFunction = (object: unknown): object is Function => {\n  return typeof object === 'function';\n};\n\nexport function isIterable(item): item is Iterable<unknown> {\n  if (item === null || item === undefined) {\n    return false;\n  }\n  return typeof item[Symbol.iterator] === 'function';\n}\n\nexport const useConstructor = (callback) => {\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\n  if (hasBeenCalled) return;\n  callback();\n  setHasBeenCalled(true);\n};\n\n// Converts a CSS style from string to an object supported by React.\n// E.g. `border: 3px solid green; border-radius: 4px;` is converted into\n// `{ border: '3px solid green', borderRadius: '4px'}`.\nexport const cssStringToObject = (string) => {\n  const regExp = /(?<=^|;)\\s*([^:]+)\\s*:\\s*([^;]+)\\s*/g;\n  const result = {};\n  if (typeof string === 'string') {\n    string.replace(regExp, (declaration, property, value) => {\n      // The property name must be converted from kebab-case to camelCase.\n      // @see https://reactjs.org/docs/dom-elements.html#style\n      const camelizedProperty = property.replace(/-./g, (part) =>\n        part[1].toUpperCase(),\n      );\n      return (result[camelizedProperty] = value);\n    });\n  }\n  return result;\n};\n\n// @see https://github.com/facebook/react/blob/v18.2.0/packages/react-dom/src/shared/possibleStandardNames.js#L11\nexport const reactPropertyMap = {\n  // HTML\n  accept: 'accept',\n  acceptcharset: 'acceptCharset',\n  'accept-charset': 'acceptCharset',\n  accesskey: 'accessKey',\n  action: 'action',\n  allowfullscreen: 'allowFullScreen',\n  alt: 'alt',\n  as: 'as',\n  async: 'async',\n  autocapitalize: 'autoCapitalize',\n  autocomplete: 'autoComplete',\n  autocorrect: 'autoCorrect',\n  autofocus: 'autoFocus',\n  autoplay: 'autoPlay',\n  autosave: 'autoSave',\n  capture: 'capture',\n  cellpadding: 'cellPadding',\n  cellspacing: 'cellSpacing',\n  challenge: 'challenge',\n  charset: 'charSet',\n  checked: 'checked',\n  children: 'children',\n  cite: 'cite',\n  class: 'className',\n  classid: 'classID',\n  classname: 'className',\n  cols: 'cols',\n  colspan: 'colSpan',\n  content: 'content',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  controls: 'controls',\n  controlslist: 'controlsList',\n  coords: 'coords',\n  crossorigin: 'crossOrigin',\n  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\n  data: 'data',\n  datetime: 'dateTime',\n  default: 'default',\n  defaultchecked: 'defaultChecked',\n  defaultvalue: 'defaultValue',\n  defer: 'defer',\n  dir: 'dir',\n  disabled: 'disabled',\n  disablepictureinpicture: 'disablePictureInPicture',\n  disableremoteplayback: 'disableRemotePlayback',\n  download: 'download',\n  draggable: 'draggable',\n  enctype: 'encType',\n  enterkeyhint: 'enterKeyHint',\n  for: 'htmlFor',\n  form: 'form',\n  formmethod: 'formMethod',\n  formaction: 'formAction',\n  formenctype: 'formEncType',\n  formnovalidate: 'formNoValidate',\n  formtarget: 'formTarget',\n  frameborder: 'frameBorder',\n  headers: 'headers',\n  height: 'height',\n  hidden: 'hidden',\n  high: 'high',\n  href: 'href',\n  hreflang: 'hrefLang',\n  htmlfor: 'htmlFor',\n  httpequiv: 'httpEquiv',\n  'http-equiv': 'httpEquiv',\n  icon: 'icon',\n  id: 'id',\n  imagesizes: 'imageSizes',\n  imagesrcset: 'imageSrcSet',\n  innerhtml: 'innerHTML',\n  inputmode: 'inputMode',\n  integrity: 'integrity',\n  is: 'is',\n  itemid: 'itemID',\n  itemprop: 'itemProp',\n  itemref: 'itemRef',\n  itemscope: 'itemScope',\n  itemtype: 'itemType',\n  keyparams: 'keyParams',\n  keytype: 'keyType',\n  kind: 'kind',\n  label: 'label',\n  lang: 'lang',\n  list: 'list',\n  loop: 'loop',\n  low: 'low',\n  manifest: 'manifest',\n  marginwidth: 'marginWidth',\n  marginheight: 'marginHeight',\n  max: 'max',\n  maxlength: 'maxLength',\n  media: 'media',\n  mediagroup: 'mediaGroup',\n  method: 'method',\n  min: 'min',\n  minlength: 'minLength',\n  multiple: 'multiple',\n  muted: 'muted',\n  name: 'name',\n  nomodule: 'noModule',\n  nonce: 'nonce',\n  novalidate: 'noValidate',\n  open: 'open',\n  optimum: 'optimum',\n  pattern: 'pattern',\n  placeholder: 'placeholder',\n  playsinline: 'playsInline',\n  poster: 'poster',\n  preload: 'preload',\n  profile: 'profile',\n  radiogroup: 'radioGroup',\n  readonly: 'readOnly',\n  referrerpolicy: 'referrerPolicy',\n  rel: 'rel',\n  required: 'required',\n  reversed: 'reversed',\n  role: 'role',\n  rows: 'rows',\n  rowspan: 'rowSpan',\n  sandbox: 'sandbox',\n  scope: 'scope',\n  scoped: 'scoped',\n  scrolling: 'scrolling',\n  seamless: 'seamless',\n  selected: 'selected',\n  shape: 'shape',\n  size: 'size',\n  sizes: 'sizes',\n  span: 'span',\n  spellcheck: 'spellCheck',\n  src: 'src',\n  srcdoc: 'srcDoc',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  start: 'start',\n  step: 'step',\n  style: 'style',\n  summary: 'summary',\n  tabindex: 'tabIndex',\n  target: 'target',\n  title: 'title',\n  type: 'type',\n  usemap: 'useMap',\n  value: 'value',\n  width: 'width',\n  wmode: 'wmode',\n  wrap: 'wrap',\n};\n\n// Get the index from the webform key if the element is multi-value.\nexport const getIndexOfMultiValue = (string) => {\n  const matchArr = string.match(/\\[(\\d.*?)\\]/g);\n  // In case the webform key contains other indexes, we only want the last one.\n  return matchArr.pop();\n};\n\nexport const getCurrentError = (clientSideError, serverSideError) => {\n  if (clientSideError) {\n    return clientSideError;\n  }\n  if (\n    typeof serverSideError === 'string' ||\n    React.isValidElement(serverSideError)\n  ) {\n    return serverSideError;\n  }\n  return;\n};\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/TehShrike/deepmerge#arraymerge-example-combine-arrays\n */\nexport const arrayMerge = (\n  target: any[],\n  source: any[],\n  options: any,\n): any[] => {\n  const destination = target.slice();\n\n  source.forEach((item, index) => {\n    if (typeof destination[index] === 'undefined') {\n      destination[index] = options.cloneUnlessOtherwiseSpecified(item, options);\n    } else if (options.isMergeableObject(item)) {\n      destination[index] = deepmerge(target[index], item, options);\n    } else if (target.indexOf(item) === -1) {\n      destination.push(item);\n    }\n  });\n\n  return destination;\n};\n\n// Updates the name and ID of every child element recursively.\nexport function updateNameAndIdWithIndex(index, element) {\n  const childElements = getChildElements(element);\n  if (childElements.length) {\n    // Make a deep copy of the element item that we can change the id and name of.\n    for (const nestedElement of childElements) {\n      const id = element[nestedElement]['#id'];\n      const idLength = id.length;\n      const name = element[nestedElement]['#name'];\n      if (id.charAt(idLength - 1) === ']') {\n        const updatedId = id.replace(/\\[(.+?)\\]/g, '[' + index + ']');\n        const updatedName = name.replace(/\\[(.+?)\\]/g, '[' + index + ']');\n        element[nestedElement]['#id'] = updatedId;\n        element[nestedElement]['#name'] = updatedName;\n      } else {\n        element[nestedElement][\n          '#id'\n        ] = `${element[nestedElement]['#id']}[${index}]`;\n        element[nestedElement][\n          '#name'\n        ] = `${element[nestedElement]['#name']}[${index}]`;\n      }\n      updateNameAndIdWithIndex(index, element[nestedElement]);\n    }\n  } else {\n    return;\n  }\n}\n\n// Accesses an object property with a given path that is in the format of a string\n// with properties separated by periods.\nexport function resolvePath(path: string, obj: object) {\n  return path.split('.').reduce(function (prev, curr) {\n    return prev ? prev[curr] : null;\n  }, obj || self);\n}\n\nexport const checkDateMinMax = (value: string, element: object) => {\n  if (element['#date_date_min']) {\n    const min = element['#date_date_min'];\n    const minAsISO = convertDateToISO(min);\n    if (strtotime(value) < strtotime(minAsISO)) {\n      return `Date must be on or after ${minAsISO}.`;\n    }\n  }\n  if (element['#date_date_max']) {\n    const max = element['#date_date_max'];\n    const maxAsISO = convertDateToISO(max);\n    if (strtotime(value) > strtotime(maxAsISO)) {\n      return `Date must be on or before ${maxAsISO}.`;\n    }\n  }\n  return;\n};\n\nexport const convertDateToISO = (date) => {\n  if (date === 'today') {\n    return new Date().toISOString().substring(0, 10);\n  } else if (typeof strtotime(date) === 'number') {\n    return new Date(date).toISOString().split('T')[0];\n  } else {\n    return strtotime(date).toISOString().substring(0, 10);\n  }\n};\n","import { DrupalClient, FetchOptions } from 'next-drupal';\nimport { WebformObject } from '../types';\nimport { getChildElements, getNormalizedErrorMessages } from '../utils';\n\nconst deleteKeys = [\n  '#process',\n  '#groups',\n  '#after_build',\n  '#pre_render',\n  '#value_callback',\n  '#theme_wrappers',\n  '#allowed_tags',\n  '#attached',\n  '#element_validate',\n  '#cache',\n  '#prefix',\n  '#suffix',\n  '#webform_children',\n  '#webform_parents',\n  '#array_parents',\n  '#autocomplete_route_parameters',\n  '#autocomplete_route_name',\n  '#ajax',\n  '#ajax_processed',\n  '#ajax_prefix',\n  '#ajax_suffix',\n  '#child_keys',\n  '#ajax_attributes',\n  '#tabledrag',\n  '#sorted',\n  '#processed',\n  '#after_build_done',\n  '#tree',\n];\nexport const normalizeElements = (result) => {\n  deleteKeys.forEach((key) => {\n    delete result[key];\n  });\n  getChildElements(result).forEach(function (key) {\n    result[key] = normalizeElements(result[key]);\n  });\n\n  return result;\n};\n\nexport async function resolveWebformContent(\n  id: string,\n  drupal: DrupalClient,\n  fetchOptions?: FetchOptions,\n): Promise<WebformObject> {\n  const url = drupal.buildUrl(`/webform/${id}?_format=json`);\n  const elementsUrl = drupal.buildUrl(\n    `/webform_rest/${id}/elements?_format=json`,\n  );\n  const [result, elementsResult] = await Promise.all([\n    drupal.fetch(url.toString(), {\n      ...fetchOptions,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }),\n    drupal.fetch(elementsUrl.toString(), {\n      ...fetchOptions,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }),\n  ]);\n  if (!result.ok) {\n    const message = await result.json();\n    throw new Error(message);\n  }\n  if (!elementsResult.ok) {\n    const message = await elementsResult.json();\n    throw new Error(message);\n  }\n\n  // Clean up some commonly provided, unused properties to reduce the overall\n  // size of props.\n  const normalizedElements = normalizeElements(await elementsResult.json());\n\n  const webform = await result.json();\n\n  return {\n    id: id,\n    uuid: webform.uuid,\n    title: webform.title,\n    description: webform.description,\n    status: webform.status,\n    confirmation: {\n      type: webform.settings.confirmation_type,\n      url: webform.settings.confirmation_url,\n      message: webform.settings.confirmation_message,\n    },\n    elements: normalizedElements,\n  };\n}\n\nexport async function resolveWebformSubmission(\n  id: string,\n  uuid: string,\n  drupal: DrupalClient,\n  fetchOptions?: FetchOptions,\n): Promise<WebformObject> {\n  const url = drupal.buildUrl(`/webform/${id}?_format=json`);\n  const elementsUrl = drupal.buildUrl(\n    `/webform_rest/${id}/elements?_format=json`,\n  );\n  const submissionUrl = drupal.buildUrl(\n    `/webform_rest/${id}/submission/${uuid}?_format=json`,\n  );\n  const [result, elementsResult, submissionResult] = await Promise.all([\n    drupal.fetch(url.toString(), {\n      ...fetchOptions,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }),\n    drupal.fetch(elementsUrl.toString(), {\n      ...fetchOptions,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }),\n    drupal.fetch(submissionUrl.toString(), {\n      ...fetchOptions,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }),\n  ]);\n  if (!result.ok) {\n    const message = await result.json();\n    throw new Error(message);\n  }\n  if (!elementsResult.ok) {\n    const message = await elementsResult.json();\n    throw new Error(message);\n  }\n  if (!submissionResult.ok) {\n    const message = await submissionResult.json();\n    throw new Error(message);\n  }\n\n  // Clean up some commonly provided, unused properties to reduce the overall\n  // size of props.\n  const normalizedElements = normalizeElements(await elementsResult.json());\n\n  // Fetch submission ID\n  const submission = await submissionResult.json();\n\n  const webform = await result.json();\n\n  return {\n    id: id,\n    uuid: webform.uuid,\n    title: webform.title,\n    description: webform.description,\n    status: webform.status,\n    confirmation: {\n      type: webform.settings.confirmation_type,\n      url: webform.settings.confirmation_url,\n      message: webform.settings.confirmation_message,\n    },\n    elements: normalizedElements,\n  };\n}\n\nexport async function defaultOnSubmit({\n  id,\n  event,\n  data,\n  setData,\n  setStatus,\n  setErrors,\n  apiUrl,\n}) {\n  const body = { ...(data as object), ...{ webform_id: id } };\n  const response = await fetch(apiUrl, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  if (!response.ok) {\n    setStatus('error');\n    const message = await response.json();\n    setErrors(getNormalizedErrorMessages(message.message.error));\n  } else {\n    setStatus('success');\n    setData({});\n    // Clear webform element errors.\n    setErrors({});\n  }\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nconst withDefaultValue = (EnhancedComponent) => {\n  return function WebformElementWithDefaultValue(props) {\n    useEffect(() => {\n      if (\n        !props.value &&\n        props.element['#default_value'] &&\n        !props.element['#default_value']['headers']\n      ) {\n        props.setValue(props.element['#default_value']);\n      }\n    }, []);\n\n    return <EnhancedComponent {...props} />;\n  };\n};\n\nexport default withDefaultValue;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { cssStringToObject, reactPropertyMap } from '../../utils';\n\nexport const normalizeAttributes = (attributes): { [key: string]: never } => {\n  const ignoreList = [\n    'id',\n    'data-drupal-selector',\n    'webform-remove-for-attribute',\n  ];\n  const filteredAttributes = Object.keys(attributes).filter((attribute) => {\n    return !ignoreList.includes(attribute);\n  });\n\n  return filteredAttributes.reduce((currentValue, attribute) => {\n    if (attribute === 'class') {\n      currentValue['className'] = classNames(attributes[attribute]);\n    } else if (reactPropertyMap[attribute]) {\n      currentValue[reactPropertyMap[attribute]] = attributes[attribute];\n    } else {\n      currentValue[attribute] = attributes[attribute];\n    }\n\n    return currentValue;\n  }, {});\n};\n\nconst withAttributes = (EnhancedComponent) => {\n  return function WebformElementWithAttributes(props) {\n    const normalizedFieldAttributes = normalizeAttributes(\n      props.element['#attributes'] ?? {},\n    );\n    const field = {\n      ...normalizedFieldAttributes,\n      ...(props.fieldProps ?? {}),\n    };\n    if (field['style']) {\n      field['style'] = cssStringToObject(field['style']);\n    }\n\n    const normalizedLabelAttributes = normalizeAttributes(\n      props.element['#label_attributes'] ?? {},\n    );\n    const label = {\n      ...normalizedLabelAttributes,\n      ...(props.labelProps ?? {}),\n    };\n    if (label['style']) {\n      label['style'] = cssStringToObject(label['style']);\n    }\n\n    const normalizedWrapperAttributes = normalizeAttributes(\n      props.element['#wrapper_attributes'] ?? {},\n    );\n    const wrapper = {\n      ...normalizedWrapperAttributes,\n      ...(props.wrapperProps ?? {}),\n    };\n    if (wrapper['style']) {\n      wrapper['style'] = cssStringToObject(wrapper['style']);\n    }\n\n    return (\n      <EnhancedComponent\n        {...props}\n        fieldProps={field}\n        labelProps={label}\n        wrapperProps={wrapper}\n      />\n    );\n  };\n};\n\nexport default withAttributes;\n","import * as React from 'react';\nimport { useContext, useEffect, useState } from 'react';\nimport { isObject, WebformContext } from '../../utils';\nimport { WebformDataType, WebformElementProps } from '../../types';\n\n// Generate dependency array for useEffect.\nconst getDependencies = (\n  states: WebformStatesRenderArrayType,\n): Array<string> => {\n  if (!states || Object.keys(states).includes('headers')) {\n    return [];\n  }\n\n  const dependencies = [];\n  for (const effect of Object.keys(states)) {\n    // Loop through indexes or selectors.\n    for (const indexOrSelector of Object.keys(states[effect])) {\n      // If indexOrSelector is not an index, then ALL conditions must be true\n      // for the attribute to take effect.\n      if (isNaN(Number(indexOrSelector))) {\n        const elementName = getElementName(indexOrSelector);\n        dependencies.push(elementName);\n      } else if (\n        states[effect][indexOrSelector] !== 'or' &&\n        states[effect][indexOrSelector] !== 'xor'\n      ) {\n        const selectorString = Object.keys(states[effect][indexOrSelector])[0];\n        const elementName = getElementName(selectorString);\n        dependencies.push(elementName);\n      }\n    }\n  }\n  return dependencies;\n};\n\n// Returns substring with the element selector.\nfunction getElementName(string: string): string | undefined {\n  const match = string.match(/\\[name=[\"|']([A-z][A-z\\d-_.:]*)[\"|']\\]$/);\n  return match && match[1];\n}\n\n// Checks if the condition is true or not and returns a boolean value.\nfunction getConditionState(trigger, value: string | boolean): boolean {\n  if (isObject(trigger[Object.keys(trigger)[0]])) {\n    switch (Object.keys(trigger[Object.keys(trigger)[0]])[0]) {\n      case 'pattern': {\n        if (typeof value !== 'string') {\n          return false;\n        }\n\n        const re = new RegExp(trigger['value']['pattern']);\n        return re.test(value);\n      }\n      case '!pattern': {\n        if (typeof value !== 'string') {\n          return false;\n        }\n\n        const re = new RegExp(trigger['value']['pattern']);\n        return !re.test(value);\n      }\n      case 'less':\n        return value < trigger['value']['less'];\n      case 'less_equal':\n        return value <= trigger['value']['less_equal'];\n      case 'greater':\n        return value > trigger['value']['greater'];\n      case 'greater_equal':\n        return value >= trigger['value']['greater_equal'];\n      case 'between':\n      case '!between': {\n        const betweenValues = trigger['value']['between'];\n        const min = betweenValues.substring(0, betweenValues.indexOf(':'));\n        const max = betweenValues.substring(\n          betweenValues.indexOf(':'),\n          betweenValues.length - 1,\n        );\n        if (Object.keys(trigger)[0] == 'between') {\n          return value >= min && value <= max;\n        } else {\n          return value < min || value > max;\n        }\n      }\n    }\n  } else {\n    switch (trigger && Object.keys(trigger)[0]) {\n      case 'empty':\n        return !value;\n      case 'filled':\n        return !!value;\n      case 'checked':\n        return value == true;\n      case 'unchecked':\n        return value == false;\n      case 'value':\n        return value == trigger['value'];\n      case '!value':\n        return value != trigger['value'];\n    }\n  }\n}\n\nconst getStateConditions = (\n  states: WebformStatesRenderArrayType,\n  data: WebformDataType,\n) => {\n  const allConditionsForTrue = {};\n  const anyConditionForTrue = {};\n  const oneConditionForTrue = {};\n  let webformStates;\n\n  if (states && !Object.keys(states).includes('headers')) {\n    webformStates = states;\n    for (const effect of Object.keys(webformStates)) {\n      allConditionsForTrue[effect] = {};\n      anyConditionForTrue[effect] = {};\n      oneConditionForTrue[effect] = {};\n      // Loop through indexes or selectors.\n      for (const indexOrSelector of Object.keys(webformStates[effect])) {\n        // If indexOrSelector is not an index, then ALL conditions must be true\n        // for the attribute to take effect.\n        if (isNaN(Number(indexOrSelector))) {\n          const elementName = getElementName(indexOrSelector);\n\n          if (\n            Object.prototype.hasOwnProperty.call(data, elementName) &&\n            typeof data[elementName] !== 'string' &&\n            typeof data[elementName] !== 'boolean'\n          ) {\n            console.warn(\n              `Unexpected type \"${typeof data[\n                elementName\n              ]}\" for element \"${elementName}\"`,\n            );\n            continue;\n          }\n\n          allConditionsForTrue[effect][elementName] = getConditionState(\n            webformStates[effect][indexOrSelector],\n            (data[elementName] as string | boolean) ?? undefined,\n          );\n        } else if (\n          webformStates[effect][indexOrSelector] !== 'or' &&\n          webformStates[effect][indexOrSelector] !== 'xor'\n        ) {\n          const selectorString = Object.keys(\n            webformStates[effect][indexOrSelector],\n          )[0];\n          const elementName = getElementName(selectorString);\n          const trigger = Object.values(\n            webformStates[effect][indexOrSelector],\n          )[0];\n\n          if (\n            Object.prototype.hasOwnProperty.call(data, elementName) &&\n            typeof data[elementName] !== 'string' &&\n            typeof data[elementName] !== 'boolean'\n          ) {\n            console.warn(\n              `Unexpected type \"${typeof data[\n                elementName\n              ]}\" for element \"${elementName}\"`,\n            );\n            continue;\n          }\n\n          if (Object.values(webformStates[effect]).includes('or')) {\n            anyConditionForTrue[effect][elementName] = getConditionState(\n              trigger,\n              (data[elementName] as string | boolean) ?? undefined,\n            );\n          } else if (Object.values(webformStates[effect]).includes('xor')) {\n            oneConditionForTrue[effect][elementName] = getConditionState(\n              trigger,\n              (data[elementName] as string | boolean) ?? undefined,\n            );\n          }\n        }\n      }\n    }\n  }\n  return {\n    allConditionsForTrue,\n    anyConditionForTrue,\n    oneConditionForTrue,\n    webformStates,\n  };\n};\n\nconst getEffect = (\n  effect: string,\n): WebformElementStatesStateType | undefined => {\n  switch (effect) {\n    case 'invisible':\n    case 'invisible-slide':\n    case '!visible':\n      return { '#access': false };\n    case 'visible':\n    case 'visible-slide':\n    case '!invisible':\n      return { '#access': true };\n    case 'enabled':\n    case '!disabled':\n      return { '#disabled': false };\n    case 'disabled':\n    case '!enabled':\n      return { '#disabled': true };\n    case 'required':\n    case '!optional':\n      return { '#required': true };\n    case 'optional':\n    case '!required':\n      return { '#required': false };\n    case 'checked':\n    case '!unchecked':\n      return { '#checked': true };\n    case 'unchecked':\n    case '!checked':\n      return { '#unchecked': true };\n    case 'readonly':\n    case '!readwrite':\n      return { '#readonly': true };\n    case 'readwrite':\n    case '!readonly':\n      return { '#readonly': false };\n  }\n};\n\nconst getStatesForData = (\n  states: WebformStatesRenderArrayType,\n  data: WebformDataType,\n): WebformElementStatesStateType => {\n  // Initialize the list of conditions and set whether they are true or not.\n  const {\n    allConditionsForTrue,\n    anyConditionForTrue,\n    oneConditionForTrue,\n    webformStates,\n  } = getStateConditions(states, data);\n\n  if (\n    !webformStates ||\n    Object.keys(webformStates).length === 0 ||\n    !Object.keys(webformStates)[0].length\n  ) {\n    return;\n  }\n\n  const effects = {};\n\n  // Set the state accordingly based on our list of conditions.\n  for (const effect of Object.keys(webformStates)) {\n    // Check if EVERY condition is true.\n    if (\n      Object.keys(allConditionsForTrue[effect]).length &&\n      Object.values(allConditionsForTrue[effect]).every(\n        (value) => value === true,\n      )\n    ) {\n      Object.assign(effects, getEffect(effect));\n      // Check if ANY condition is true (OR).\n    } else if (\n      Object.keys(anyConditionForTrue[effect]).length &&\n      Object.values(anyConditionForTrue[effect]).includes(true)\n    ) {\n      Object.assign(effects, getEffect(effect));\n      // Check if ONE condition is true (XOR).\n    } else if (Object.keys(oneConditionForTrue[effect]).length) {\n      const filterByTrue = Object.values(oneConditionForTrue[effect]).filter(\n        (item) => item == true,\n      );\n      if (filterByTrue.length == 1) {\n        Object.assign(effects, getEffect(effect));\n      } else {\n        const falseEffect = '!' + effect;\n        Object.assign(effects, getEffect(falseEffect));\n      }\n    } else {\n      const falseEffect = '!' + effect;\n      Object.assign(effects, getEffect(falseEffect));\n    }\n  }\n\n  return effects;\n};\n\ntype WebformElementStatesStateType = {\n  '#access'?: boolean;\n  '#disabled'?: boolean;\n  '#required'?: boolean;\n  '#checked'?: boolean;\n  '#unchecked'?: boolean;\n  '#readonly'?: boolean;\n};\n\ntype WebformStatesRenderArrayType = {\n  [effect: string]: WebformAndStateType | WebformOrStateType;\n};\n\ntype WebformAndStateType = {\n  [selector: string]: { [trigger: string]: boolean | string };\n};\n\ntype WebformOrStateType = {\n  [key: number]:\n    | {\n        [selector: string]: { [trigger: string]: boolean | string };\n      }\n    | 'or'\n    | 'xor';\n};\n\n// Higher order component to handle the conditional logic for Webform elements.\nconst withStates = (WrappedComponent) => {\n  return function WebformElementWithStates(props: WebformElementProps) {\n    const [state, setState] = useState<WebformElementStatesStateType>({});\n    const { data } = useContext(WebformContext);\n    const { element } = props;\n    // Multi-value elements don't have #states in its render array so we need to use #_webform_states.\n    const elementStates = element['add']\n      ? element['#_webform_states']\n      : element['#states'];\n    const dependencyElements = getDependencies(elementStates);\n\n    useEffect(() => {\n      setState(getStatesForData(elementStates, data));\n    }, []);\n    useEffect(\n      () => {\n        setState(getStatesForData(elementStates, data));\n      },\n      dependencyElements.map((key) => data[key]),\n    );\n\n    // Override element object with the dynamic states.\n    return <WrappedComponent {...props} element={{ ...element, ...state }} />;\n  };\n};\n\nexport default withStates;\n","import * as React from 'react';\nimport { WebformWrapperProps } from '../../types';\nimport classNames from 'classnames';\n\nconst WebformElementWrapper = ({\n  children,\n  label,\n  labelProps = {},\n  labelFor,\n  isRequired,\n  description,\n  descriptionDisplay,\n  descriptionProps = {},\n  labelDisplay = 'before',\n  error,\n  access,\n  ...props\n}: WebformWrapperProps) => {\n  const css = `\n.required-field:after {\n  content: ' *';\n  color: red;\n}\n.invalid-feedback {\n  color: red;\n}\n.visually-hidden {\n  position: absolute !important;\n  clip: rect(1px, 1px, 1px, 1px);\n  overflow: hidden;\n  height: 1px;\n  width: 1px;\n  word-wrap: normal;\n}\n        `;\n  const labelClasses = classNames(labelProps['className'] as string, {\n    'required-field': isRequired,\n    'visually-hidden': labelDisplay === 'invisible',\n  });\n\n  const descriptionClasses = classNames(descriptionProps['className'], {\n    'visually-hidden': descriptionDisplay === 'invisible',\n  });\n\n  const labelElement = (\n    <label {...labelProps} className={labelClasses} htmlFor={labelFor}>\n      {label}\n    </label>\n  );\n  return access ? (\n    <div {...props}>\n      <style suppressHydrationWarning>{css}</style>\n      {!['after', 'none'].includes(labelDisplay) && labelElement}\n      {descriptionDisplay === 'before' && description && (\n        <div {...descriptionProps}>{description}</div>\n      )}\n      {children}\n      {(descriptionDisplay === 'after' || descriptionDisplay === 'invisible') &&\n        description && (\n          <div {...descriptionProps} className={descriptionClasses}>\n            {description}\n          </div>\n        )}\n      {labelDisplay === 'after' && labelElement}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  ) : null;\n};\n\nexport default WebformElementWrapper;\n","import * as React from 'react';\nimport { WebformWrapperProps } from '../../types';\nimport classNames from 'classnames';\n\nconst WebformFieldsetWrapper = ({\n  children,\n  label,\n  labelProps = {},\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  labelDisplay,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  labelFor,\n  description,\n  descriptionDisplay,\n  descriptionProps = {},\n  isRequired,\n  error,\n  access,\n  ...props\n}: WebformWrapperProps) => {\n  const css = `\n.required-field:after {\n  content: ' *';\n  color: red;\n}\n.invalid-feedback {\n  color: red;\n}\n.visually-hidden {\n  position: absolute !important;\n  clip: rect(1px, 1px, 1px, 1px);\n  overflow: hidden;\n  height: 1px;\n  width: 1px;\n  word-wrap: normal;\n}\n        `;\n  const labelClasses = classNames(labelProps['className'] as string, {\n    'required-field': isRequired,\n  });\n\n  const descriptionClasses = classNames(descriptionProps['className'], {\n    'visually-hidden': descriptionDisplay === 'invisible',\n  });\n\n  const labelElement = (\n    <legend {...labelProps} className={labelClasses}>\n      {label}\n    </legend>\n  );\n  return access ? (\n    <fieldset {...props}>\n      <style suppressHydrationWarning>{css}</style>\n      {labelElement}\n      {descriptionDisplay === 'before' && description && (\n        <div {...descriptionProps} className={descriptionClasses}>\n          {description}\n        </div>\n      )}\n      {children}\n      {(descriptionDisplay === 'after' || descriptionDisplay === 'invisible') &&\n        description && (\n          <div {...descriptionProps} className={descriptionClasses}>\n            {description}\n          </div>\n        )}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </fieldset>\n  ) : null;\n};\n\nexport default WebformFieldsetWrapper;\n","import * as React from 'react';\nimport WebformElementWrapper from '../wrappers/WebformElementWrapper';\nimport WebformFieldsetWrapper from '../wrappers/WebformFieldsetWrapper';\nimport { WebformElementType } from '../../types';\n\nexport type customConfigFn = (element: WebformElementType) => object;\nconst withWrapper = (\n  EnhancedComponent,\n  customConfig: object | customConfigFn = {},\n) => {\n  return function WebformElementWithWrapper(props) {\n    const { element, error } = props;\n\n    const config = {\n      defaultWrapperType: 'form_element',\n      displayErrors: true,\n      labelFor: (element) => element['#id'],\n      labelProps: {},\n      wrapperProps: {},\n      ...(typeof customConfig === 'function'\n        ? customConfig(element)\n        : customConfig),\n    };\n    const { labelFor, defaultWrapperType, displayErrors } = config;\n\n    // Apply wrapper type based on render array, otherwise use the default\n    // value.\n    const wrapperType = element['#wrapper_type']\n      ? element['#wrapper_type']\n      : defaultWrapperType;\n\n    // Label is only configurable for `form_element` wrappers because:\n    //   - `legend` is a required child of `fieldset`.\n    //   - `container` type is specifically used for not rendering the label.\n    const labelDisplay =\n      wrapperType === 'form_element' && element['#title']\n        ? element['#title_display']\n        : 'none';\n\n    // Only render errors that are tied to the current element by checking if\n    // the curent error is a string or React element.\n    const hasValidError =\n      typeof error === 'string' || React.isValidElement(error);\n\n    const WrapperComponent =\n      wrapperType !== 'fieldset'\n        ? WebformElementWrapper\n        : WebformFieldsetWrapper;\n\n    // Allow components to retrieve the `labelFor` property value from the element.\n    const getLabel = () => {\n      if (typeof labelFor === 'function') {\n        return labelFor(element);\n      }\n      return;\n    };\n\n    // Allow overriding label and wrapper props.\n    const labelProps = {\n      ...props.labelProps,\n      ...config.labelProps,\n    };\n    const wrapperProps = {\n      ...props.wrapperProps,\n      ...config.wrapperProps,\n    };\n\n    return (\n      <WrapperComponent\n        label={element['#title']}\n        isRequired={element['#required']}\n        access={element['#access']}\n        labelDisplay={labelDisplay}\n        error={displayErrors && hasValidError ? error : undefined}\n        labelProps={labelProps}\n        description={\n          element['#description'] ? (\n            <div\n              dangerouslySetInnerHTML={{\n                __html: element['#description']['#markup'],\n              }}\n            />\n          ) : undefined\n        }\n        descriptionDisplay={element['#description_display']}\n        {...wrapperProps}\n        labelFor={labelDisplay !== 'none' ? getLabel() : undefined}\n      >\n        <EnhancedComponent {...props} />\n      </WrapperComponent>\n    );\n  };\n};\n\nexport default withWrapper;\n","import { WebformContext } from '../utils';\nimport * as React from 'react';\nimport { useEffect, useState, useContext } from 'react';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withAttributes from './utils/withAttributes';\nimport withStates from './utils/withStates';\nimport withWrapper from './utils/withWrapper';\n\nconst WebformAutocomplete = ({ element, setValue, value = '', fieldProps }) => {\n  const [autocompleteOptions, setAutocompleteOptions] = useState({});\n  const [autocompleteValue, setAutocompleteValue] = useState<string | null>(\n    null,\n  );\n  const webform = useContext(WebformContext);\n\n  useEffect(() => {\n    const resolveAsyncAutocompleteItems = async () => {\n      const url = `${webform.apiUrl}?op=autocomplete_options&id=${webform.id}&options_id=${element['#autocomplete_items']}`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw Error((await response.json()).message.message);\n      }\n\n      setAutocompleteOptions(await response.json());\n    };\n    if (Array.isArray(element['#autocomplete_items'])) {\n      setAutocompleteOptions(\n        element['#autocomplete_items'].reduce((currentValue, item) => {\n          currentValue[item] = item;\n          return currentValue;\n        }, {}),\n      );\n    } else if (typeof element['#autocomplete_items'] === 'string') {\n      resolveAsyncAutocompleteItems();\n    } else {\n      console.warn(\n        `Unsupported autocomplete type on element ${element['#name']}.`,\n      );\n    }\n  }, [element['#autocomplete_items']]);\n\n  const onChangeHandler = async (e) => {\n    if (autocompleteOptions[e.target.value]) {\n      setValue(e.target.value);\n    } else {\n      setValue('');\n    }\n    setAutocompleteValue(e.target.value);\n  };\n\n  // Update component state when value changes in upstream state.\n  useEffect(() => {\n    setAutocompleteValue(value);\n  }, [value]);\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        name={element['#webform_key']}\n        onChange={(e) => onChangeHandler(e)}\n        disabled={element['#disabled']}\n        hidden={!element['#access']}\n        required={element['#required']}\n        readOnly={element['#readonly']}\n        value={autocompleteValue ?? value}\n        {...fieldProps}\n        id={`${element['#id']}`}\n        list={`${element['#webform_key']}-datalist`}\n      />\n      <datalist id={`${element['#webform_key']}-datalist`}>\n        {Object.keys(autocompleteOptions).map((item, i) => {\n          return (\n            <option key={i} value={item}>\n              {autocompleteOptions[item]}\n            </option>\n          );\n        })}\n      </datalist>\n    </>\n  );\n};\n\nexport default withStates(\n  withDefaultValue(withAttributes(withWrapper(WebformAutocomplete))),\n);\n","import * as React from 'react';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withAttributes from './utils/withAttributes';\nimport withStates from './utils/withStates';\nimport withWrapper from './utils/withWrapper';\n\nconst supportedTypes = {\n  number: 'number',\n  hidden: 'hidden',\n  email: 'email',\n  search: 'search',\n  tel: 'tel',\n  url: 'url',\n  textfield: 'text',\n};\n\nexport const WebformText = ({ element, value = '', setValue, fieldProps }) => {\n  if (!(element['#type'] in supportedTypes)) {\n    console.warn(\n      `${element['#type']} which was used on ${element['#webform_key']} is not supported by WebformText.`,\n    );\n  }\n\n  const onChangeHandler = async (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <>\n      <input\n        type={supportedTypes[element['#type']] ?? element['#type']}\n        name={element['#name']}\n        value={value}\n        onChange={(e) => onChangeHandler(e)}\n        disabled={element['#disabled']}\n        hidden={!element['#access']}\n        required={element['#required']}\n        readOnly={element['#readonly']}\n        placeholder={element['#placeholder']}\n        {...fieldProps}\n        id={element['#id']}\n      />\n    </>\n  );\n};\n\nexport default withStates(\n  withDefaultValue(withAttributes(withWrapper(WebformText))),\n);\n","import * as React from 'react';\nimport { useState } from 'react';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withAttributes from './utils/withAttributes';\nimport withStates from './utils/withStates';\nimport withWrapper from './utils/withWrapper';\n\nconst WebformSelect = ({ element, setValue, value = '', fieldProps }) => {\n  const [showOther, setShowOther] = useState(false);\n\n  // Used to get the options for select other elements that have the options nested one level deeper.\n  function getOptions() {\n    let options = {};\n    for (const key of Object.keys(element)) {\n      if (key == 'select') {\n        options = element[key];\n      }\n    }\n    return options;\n  }\n\n  const optionsForOther =\n    element['#type'] === 'webform_select_other' ? getOptions() : null;\n\n  const onChangeHandler = async (e) => {\n    if (e.target.value == 'Other') {\n      setShowOther(!showOther);\n    } else if (showOther) {\n      setShowOther(!showOther);\n      setValue(e.target.value);\n    } else {\n      setValue(e.target.value);\n    }\n  };\n\n  const onInputHandler = async (e) => {\n    setValue(e.target.value);\n  };\n\n  function sortOptions(options) {\n    const arr = [];\n    let title;\n    for (const key of Object.keys(options)) {\n      if (key.length) {\n        arr.push(options[key]);\n      } else {\n        title = options[key];\n      }\n    }\n    arr.unshift(title);\n    return arr;\n  }\n\n  return (\n    <>\n      <select\n        name={element['#name']}\n        onChange={(e) => onChangeHandler(e)}\n        value={value}\n        disabled={element['#disabled']}\n        hidden={!element['#access']}\n        required={element['#required']}\n        {...fieldProps}\n        id={element['#id']}\n      >\n        {element['#webform_plugin_id'] == 'select' ||\n        (typeof element['#webform_plugin_id'] === 'undefined' &&\n          element['#type'] !== 'webform_select_other')\n          ? sortOptions(element['#options']).map(\n              (option: string | number, index) => {\n                return (\n                  <option value={option} key={index}>\n                    {option}\n                  </option>\n                );\n              },\n            )\n          : null}\n        {element['#webform_plugin_id'] == 'webform_entity_select'\n          ? Object.keys(element['#options']).map(\n              (entityId: number | string) => {\n                const entityName = element['#options'][entityId];\n                return (\n                  <option key={entityId} value={entityId}>\n                    {entityName}\n                  </option>\n                );\n              },\n            )\n          : null}\n        {element['#type'] === 'webform_select_other' &&\n        optionsForOther['#options'] ? (\n          <>\n            {Object.values(optionsForOther['#options']).map((option, index) => {\n              if (option != 'Other…') {\n                return (\n                  <option value={option.toString()} key={index}>\n                    {option}\n                  </option>\n                );\n              }\n            })}\n            <option value=\"Other\">Other...</option>\n          </>\n        ) : null}\n      </select>\n      {showOther ? (\n        <input\n          type=\"text\"\n          id={element['#webform_key']}\n          name={element['#webform_key']}\n          onInput={(e) => onInputHandler(e)}\n          value={value}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default withStates(\n  withDefaultValue(withAttributes(withWrapper(WebformSelect))),\n);\n","import * as React from 'react';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withAttributes from './utils/withAttributes';\nimport withStates from './utils/withStates';\nimport withWrapper from './utils/withWrapper';\n\nconst WebformTextArea = ({ element, value = '', setValue, fieldProps }) => {\n  const onChangeHandler = async (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <>\n      <textarea\n        name={element['#webform_key']}\n        value={value}\n        onChange={(e) => onChangeHandler(e)}\n        disabled={element['#disabled']}\n        hidden={!element['#access']}\n        required={element['#required']}\n        readOnly={element['#readonly']}\n        placeholder={element['#placeholder']}\n        {...fieldProps}\n        id={element['#id']}\n      />\n    </>\n  );\n};\n\nexport default withStates(\n  withDefaultValue(withAttributes(withWrapper(WebformTextArea))),\n);\n","import * as React from 'react';\n\nexport const WebformDebug = ({ element, error }) => {\n  return (\n    <code>\n      {error}\n      <pre>{JSON.stringify(element, null, 2)}</pre>\n    </code>\n  );\n};\n\nexport default WebformDebug;\n","import { WebformContext } from './utils';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport WebformDebug from './components/WebformDebug';\nimport { WebformElementProps } from './types';\n\nexport const WebformElement = (props: WebformElementProps) => {\n  const { registry } = useContext(WebformContext);\n  const { element, error } = props;\n\n  // Render using custom component if provided:\n  if (registry.getComponent(element['#type'])) {\n    const CustomComponent = registry.getComponent(element['#type']);\n    return <CustomComponent {...props} />;\n  } else {\n    return <WebformDebug element={element} error={error} />;\n  }\n};\n\nexport default WebformElement;\n","import * as React from 'react';\nimport { PropsType, WebformElementProps } from '../types';\nimport { useEffect } from 'react';\nimport withStates from './utils/withStates';\nimport {\n  getChildElements,\n  isIterable,\n  resolvePath,\n  updateNameAndIdWithIndex,\n} from '../utils';\nimport WebformElement from '../WebformElement';\nimport withAttributes from './utils/withAttributes';\nimport withWrapper from './utils/withWrapper';\n\nexport interface WebformMultifieldProps extends WebformElementProps {\n  tableProps?: PropsType;\n  trProps?: PropsType;\n  tdProps?: PropsType;\n}\n\nconst WebformMultifield = ({\n  element,\n  value,\n  setValue,\n  error,\n  tableProps = {},\n  trProps = {},\n  tdProps = {},\n}: WebformMultifieldProps) => {\n  const normalizedValue = Array.isArray(value) ? value : [];\n  const isCustomComposite = element['#type'] === 'webform_custom_composite';\n\n  const remove = (item) => {\n    if (!isIterable(value)) {\n      throw new TypeError(`\"${typeof value}\" is not iterable`);\n    }\n    const newValue = [...value];\n    newValue.splice(item, 1);\n    setValue(newValue);\n  };\n\n  const renderChildElement = (item, childElement, childKey = null) => {\n    const parents = [...element['#parents'], 'items', item, '_item_'];\n    const currentElement = element.items[item]\n      ? {\n          ...childElement,\n          '#access': element['#access'],\n          '#states': element['#_webform_states'],\n          '#parents': parents,\n        }\n      : {\n          ...childElement,\n          '#default_value': undefined,\n          '#access': element['#access'],\n          '#states': element['#_webform_states'],\n          '#parents': parents,\n        };\n    return (\n      <WebformElement\n        key={currentElement['#id']}\n        element={currentElement}\n        setValue={(newChildValue: string) => {\n          const newValue = Array.from(normalizedValue);\n          if (childKey) {\n            newValue[item][childKey] = newChildValue;\n          } else {\n            newValue[item] = newChildValue;\n          }\n          setValue(newValue);\n        }}\n        value={\n          childKey ? normalizedValue[item][childKey] : normalizedValue[item]\n        }\n        error={error ? error[item] : null}\n      />\n    );\n  };\n\n  const renderChildren = (item) => {\n    const compositeElements = getChildElements(element['#element']);\n    const index = element.items[item] ? item : 0;\n    if (Array.isArray(compositeElements) && compositeElements.length) {\n      return compositeElements.map((childKey) => {\n        // If 'Display in table columns' is unchecked in Drupal then the elements are\n        // under the '_items_' key.\n        const resolvedElement = element.items[index]['_item_']\n          ? resolvePath(`items.${index}._item_.${childKey}`, element)\n          : resolvePath(`items.${index}.${childKey}`, element);\n        const currentElement = {\n          ...resolvedElement,\n          '#webform_key': childKey,\n          '#id': `${resolvedElement['#id']}[${item}]`,\n        };\n        const elementItem = JSON.parse(JSON.stringify(currentElement));\n        updateNameAndIdWithIndex(item, elementItem);\n        return renderChildElement(item, elementItem, childKey);\n      });\n    } else {\n      const childElement = {\n        ...element.items[index]['_item_'],\n        '#webform_key': `${element.items[index]['_item_']['#webform_key']}[${item}]`,\n        '#id': `${element.items[index]['_item_']['#webform_key']}[${item}]`,\n      };\n      return renderChildElement(item, childElement);\n    }\n  };\n\n  const maxItems = element['#cardinality'];\n  const currentCount = normalizedValue.length;\n\n  useEffect(() => {\n    if (currentCount === 0) {\n      // Multifield is responsible for setting the default value to the state\n      // when the default value is an array. If the value is something else than\n      // array, it is the responsibility of the child element to ensure that the\n      // element data is initialized with the correct default value.\n      if (\n        element['#default_value'] &&\n        Array.isArray(element['#default_value'])\n      ) {\n        setValue(element['#default_value']);\n      } else {\n        setValue(['']);\n      }\n    }\n  }, []);\n\n  const children = [];\n  for (let i = 0; i < currentCount; i++) {\n    const removeButton = {\n      ...element.items[0]['_operations_']['remove'],\n      '#type': 'button',\n      '#value': 'Remove',\n      '#attributes': {\n        class: ['webform-button--remove'],\n      },\n    };\n    children.push(\n      <tr key={i} {...trProps}>\n        <td {...tdProps}>{renderChildren(i)}</td>\n        <td {...tdProps}>\n          <WebformElement\n            element={removeButton}\n            fieldProps={{\n              onClick: (e) => {\n                e.preventDefault();\n                remove(i);\n              },\n              id: `${element['#webform_key']}-remove-btn-${i}`,\n            }}\n          />\n        </td>\n      </tr>,\n    );\n  }\n  return (\n    <>\n      <table\n        style={{\n          width: '100%',\n        }}\n        {...tableProps}\n      >\n        <tbody>{children}</tbody>\n      </table>\n      {(currentCount < maxItems || !maxItems) && (\n        <div>\n          <WebformElement\n            element={{\n              ...element['add']['submit'],\n              '#type': 'button',\n              '#attributes': {\n                class: ['webform-button--add'],\n              },\n            }}\n            fieldProps={{\n              onClick: (e) => {\n                e.preventDefault();\n                normalizedValue.push(isCustomComposite ? {} : '');\n                setValue(normalizedValue);\n              },\n              id: `${element['#webform_key']}-add-btn`,\n            }}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default withStates(\n  withAttributes(withWrapper(WebformMultifield, { labelFor: false })),\n);\n","import * as React from 'react';\nimport WebformElement from '../WebformElement';\nimport { getChildElements, getIndexOfMultiValue } from '../utils';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withWrapper from './utils/withWrapper';\n\nconst WebformComposite = ({ element, error, value, setValue }) => {\n  const compositeElements = getChildElements(element);\n  return (\n    <>\n      {compositeElements.map((name) => {\n        return (\n          <WebformElement\n            key={name}\n            element={{\n              // Ensure that all child elements have '#webform_key' and '#states' defined.\n              '#webform_key': element['#webform_key'],\n              '#states': element['#states'],\n              ...element[name],\n              '#id': element['#webform_multiple']\n                ? `${element[name]['#id']}${getIndexOfMultiValue(\n                    element['#webform_key'],\n                  )}`\n                : element[name]['#id'],\n            }}\n            value={value && value[name] ? value[name] : ''}\n            setValue={(newValue) => {\n              setValue({ ...value, [name]: newValue });\n            }}\n            error={error ? error[name] : null}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default withDefaultValue(\n  withWrapper(WebformComposite, {\n    displayErrors: false,\n    defaultWrapperType: 'fieldset',\n  }),\n);\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport { WebformElementProps } from '../types';\nimport withAttributes from './utils/withAttributes';\nimport withStates from './utils/withStates';\nimport { getChildElements, WebformContext } from '../utils';\nimport WebformElement from '../WebformElement';\nimport withWrapper from './utils/withWrapper';\n\nconst WebformContainer = ({ element, fieldProps }: WebformElementProps) => {\n  const { data, setData, errors } = useContext(WebformContext);\n\n  const childElements = getChildElements(element).map((key) => {\n    const parentAndChildStates = element['#states']\n      ? { ...element[key]['#states'], ...element['#states'] }\n      : null;\n    return (\n      <WebformElement\n        key={element[key]['#webform_key']}\n        element={\n          parentAndChildStates\n            ? { ...element[key], '#states': parentAndChildStates }\n            : element[key]\n        }\n        error={errors[element[key]['#webform_key']]}\n        value={data[element[key]['#webform_key']]}\n        setValue={(value) => {\n          setData((previousData) => {\n            return {\n              ...previousData,\n              [element[key]['#webform_key']]: value,\n            };\n          });\n        }}\n      />\n    );\n  });\n\n  return (\n    <>\n      <div {...fieldProps}>{childElements}</div>\n    </>\n  );\n};\n\nexport default withStates(\n  withAttributes(\n    withWrapper(WebformContainer, { defaultWrapperType: 'container' }),\n  ),\n);\n","import * as React from 'react';\nimport { WebformElementProps, PropsType } from '../types';\nimport withStates from './utils/withStates';\nimport { getChildElements, WebformContext } from '../utils';\nimport WebformElement from '../WebformElement';\nimport { useContext } from 'react';\nimport withWrapper from './utils/withWrapper';\nimport { normalizeAttributes } from './utils/withAttributes';\n\nexport type WebformFlexboxLayoutPropsType = {\n  itemProps: PropsType;\n} & WebformElementProps;\nconst WebformFlexboxLayout = ({\n  element,\n  itemProps = {},\n}: WebformFlexboxLayoutPropsType) => {\n  const { data, setData, errors } = useContext(WebformContext);\n  const itemPropsWithDefaults = {\n    style: {\n      flexGrow: 1,\n    },\n    ...itemProps,\n  };\n\n  const childElements = getChildElements(element).map((key) => {\n    const parentAndChildStates = element['#states']\n      ? { ...element[key]['#states'], ...element['#states'] }\n      : null;\n    return (\n      <div {...itemPropsWithDefaults} key={element[key]['#webform_key']}>\n        <div key={element[key]['#webform_key']}>\n          <WebformElement\n            element={\n              parentAndChildStates\n                ? { ...element[key], '#states': parentAndChildStates }\n                : element[key]\n            }\n            error={errors[element[key]['#webform_key']]}\n            value={data[element[key]['#webform_key']]}\n            setValue={(value) => {\n              setData((previousData) => {\n                return {\n                  ...previousData,\n                  [element[key]['#webform_key']]: value,\n                };\n              });\n            }}\n          />\n        </div>\n      </div>\n    );\n  });\n  return <>{childElements}</>;\n};\n\nexport default withStates(\n  withWrapper(WebformFlexboxLayout, (element) => ({\n    wrapperProps: {\n      ...normalizeAttributes(element['#attributes'] ?? {}),\n      style: {\n        display: 'flex',\n        boxSizing: 'border-box',\n        gap: '1rem',\n        justifyContent: element['#align_items'] ?? 'flex-start',\n      },\n    },\n  })),\n);\n","import * as React from 'react';\nimport { WebformElementProps } from '../types';\nimport withStates from './utils/withStates';\nimport { getChildElements, WebformContext } from '../utils';\nimport { useContext } from 'react';\nimport WebformElement from '../WebformElement';\nimport withWrapper from './utils/withWrapper';\n\nconst WebformFieldset = ({ element }: WebformElementProps) => {\n  const { data, setData, errors } = useContext(WebformContext);\n\n  const childElements = getChildElements(element).map((key) => {\n    const parentAndChildStates = element['#states']\n      ? { ...element[key]['#states'], ...element['#states'] }\n      : null;\n    return (\n      <WebformElement\n        key={element[key]['#webform_key']}\n        element={\n          parentAndChildStates\n            ? { ...element[key], '#states': parentAndChildStates }\n            : element[key]\n        }\n        error={errors[element[key]['#webform_key']]}\n        value={data[element[key]['#webform_key']]}\n        setValue={(value) => {\n          setData((previousData) => {\n            return {\n              ...previousData,\n              [element[key]['#webform_key']]: value,\n            };\n          });\n        }}\n      />\n    );\n  });\n\n  return <>{childElements}</>;\n};\n\nexport default withStates(\n  withWrapper(WebformFieldset, { defaultWrapperType: 'fieldset' }),\n);\n","import WebformElementWrapper from './wrappers/WebformElementWrapper';\nimport * as React from 'react';\nimport { WebformElementProps } from '../types';\nimport withAttributes from './utils/withAttributes';\nimport withStates from './utils/withStates';\nimport { getChildElements, WebformContext } from '../utils';\nimport WebformElement from '../WebformElement';\nimport { useContext } from 'react';\n\nconst WebformSection = ({\n  element,\n  error,\n  labelProps,\n  fieldProps,\n  wrapperProps = {},\n}: WebformElementProps) => {\n  const { data, setData, errors } = useContext(WebformContext);\n\n  const childElements = getChildElements(element).map((key) => {\n    // Pass down the parent states down to the child elements. The parent state\n    // will override the child state if there are any duplicate effects.\n    const parentAndChildStates = element['#states']\n      ? { ...element[key]['#states'], ...element['#states'] }\n      : null;\n    return (\n      <WebformElement\n        key={element[key]['#webform_key']}\n        element={\n          parentAndChildStates\n            ? { ...element[key], '#states': parentAndChildStates }\n            : element[key]\n        }\n        error={errors[element[key]['#webform_key']]}\n        value={data[element[key]['#webform_key']]}\n        setValue={(value) => {\n          setData((previousData) => {\n            return {\n              ...previousData,\n              [element[key]['#webform_key']]: value,\n            };\n          });\n        }}\n      />\n    );\n  });\n\n  return (\n    <WebformElementWrapper\n      label={element['#title']}\n      isRequired={element['#required']}\n      labelDisplay={element['#title_display']}\n      access={element['#access']}\n      settings={null}\n      error={error}\n      labelProps={labelProps}\n      {...wrapperProps}\n    >\n      <section {...fieldProps} style={fieldProps['style'] as object}>\n        {childElements}\n      </section>\n    </WebformElementWrapper>\n  );\n};\n\nexport default withStates(withAttributes(WebformSection));\n","import WebformElementWrapper from './wrappers/WebformElementWrapper';\nimport * as React from 'react';\nimport { PropsType } from '../types';\nimport withStates from './utils/withStates';\nimport { getChildElements } from '../utils';\nimport WebformElement from '../WebformElement';\nimport withAttributes, { normalizeAttributes } from './utils/withAttributes';\nimport { WebformTableRowProps } from './WebformTableRow';\n\nexport interface WebformTableProps extends WebformTableRowProps {\n  theadProps?: PropsType;\n  tbodyProps?: PropsType;\n  trProps?: PropsType;\n}\n\nconst WebformTable = ({\n  element,\n  error,\n  wrapperProps = {},\n  fieldProps = {},\n  theadProps = {},\n  tbodyProps = {},\n  trProps = {},\n  tdProps = {},\n  labelProps,\n}: WebformTableProps) => {\n  const childElements = getChildElements(element).map((row) => {\n    if (element[row]['#type'] !== 'webform_table_row') {\n      return (\n        <tr key={row}>\n          <td>\n            <div>\n              The form element <em>{row}</em> is not inside a table row. To\n              render the form element, it must be placed inside a table row.\n            </div>\n          </td>\n        </tr>\n      );\n    }\n\n    return (\n      <WebformElement\n        key={row}\n        element={{ ...element[row], '#states': element['#states'] }}\n        fieldProps={trProps}\n        tdProps={tdProps}\n      />\n    );\n  });\n\n  const headers = element['#header'];\n\n  return (\n    <WebformElementWrapper\n      label={element['#title']}\n      isRequired={element['#required']}\n      labelDisplay={element['#title_display']}\n      access={element['#access']}\n      settings={null}\n      error={error}\n      labelProps={labelProps}\n      {...wrapperProps}\n    >\n      <table {...fieldProps}>\n        <thead {...theadProps}>\n          <tr {...trProps}>\n            {headers && headers.length\n              ? headers.map((header, index) => {\n                  const { data, ...attributes } = header;\n                  return (\n                    <th {...normalizeAttributes(attributes)} key={index}>\n                      {data['#markup']}\n                    </th>\n                  );\n                })\n              : null}\n          </tr>\n        </thead>\n        <tbody {...tbodyProps}>{childElements}</tbody>\n      </table>\n    </WebformElementWrapper>\n  );\n};\n\nexport default withStates(withAttributes(WebformTable));\n","import * as React from 'react';\nimport withStates from './utils/withStates';\nimport withWrapper from './utils/withWrapper';\nimport withAttributes from './utils/withAttributes';\nimport withDefaultValue from './utils/withDefaultValue';\n\nconst WebformRange = ({ element, value = 0, setValue, fieldProps }) => {\n  const onChangeHandler = async (e) => {\n    setValue(e.target.value);\n  };\n  const styles = {\n    below: {\n      transform: `translateX(${value}px)`,\n      display: 'block',\n      position: 'absolute',\n      padding: '2px 5px',\n      textAlign: 'center',\n      border: '1px solid #bbb',\n      background: '#ededed',\n    },\n    above: {\n      transform: `translateX(${value}px)`,\n      display: 'block',\n      position: 'absolute',\n      padding: '2px 5px',\n      textAlign: 'center',\n      border: '1px solid #bbb',\n      background: '#ededed',\n      bottom: '22px',\n    },\n    left: {\n      marginRight: '5px',\n    },\n    right: {\n      marginLeft: '5px',\n    },\n  };\n\n  // Styling is different based on user defined output position.\n  const outputElement = (\n    <output\n      htmlFor={element['#id']}\n      style={styles[element['#output']]}\n      name=\"result\"\n    >\n      {value}\n    </output>\n  );\n\n  return (\n    <div\n      className=\"form-type-range\"\n      style={{ display: 'block', position: 'relative' }}\n    >\n      {element['#output'] && element['#output'] === 'left'\n        ? outputElement\n        : null}\n      <input\n        type={element['#type']}\n        name={element['#webform_key']}\n        min={element['#min'] ? element['#min'] : null}\n        max={element['#max'] ? element['#max'] : null}\n        onChange={(e) => onChangeHandler(e)}\n        disabled={element['#disabled']}\n        hidden={!element['#access']}\n        required={element['#required']}\n        readOnly={element['#readonly']}\n        {...fieldProps}\n        id={element['#id']}\n        value={value}\n      />\n      {element['#output'] && element['#output'] !== 'left'\n        ? outputElement\n        : null}\n    </div>\n  );\n};\n\nexport default withStates(\n  withDefaultValue(withAttributes(withWrapper(WebformRange))),\n);\n","import { WebformCustomComponent } from '../types';\nimport * as React from 'react';\nimport withDefaultValue from './utils/withDefaultValue';\nimport { useEffect, useState } from 'react';\nimport withStates from './utils/withStates';\nimport withAttributes from './utils/withAttributes';\nimport withWrapper from './utils/withWrapper';\n\nconst WebformCheckbox: WebformCustomComponent = ({\n  element,\n  setValue,\n  fieldProps,\n  value,\n}) => {\n  if (element['#type'] !== 'checkbox' && element['#type'] !== 'radio') {\n    console.warn(\n      `${element['#type']} which was used on ${element['#webform_key']} is not supported by WebformCheckbox.`,\n    );\n  }\n\n  const [checkedState, setCheckedState] = useState(\n    value ?? (element['#checked'] ? element['#checked'] : false),\n  );\n\n  // Update component state when value changes in upstream state.\n  useEffect(() => {\n    if (typeof value === 'boolean') {\n      setCheckedState(value);\n    }\n  }, [value]);\n\n  const onChangeHandler = async (e) => {\n    setValue(e.target.checked);\n  };\n\n  return (\n    <>\n      <div>\n        <input\n          type={element['#type']}\n          name={element['#name']}\n          onChange={(e) => onChangeHandler(e)}\n          disabled={element['#disabled']}\n          hidden={!(element['#access'] ? element['#access'] : true)}\n          required={element['#required']}\n          readOnly={element['#readonly']}\n          checked={checkedState}\n          id={element['#id']}\n          {...fieldProps}\n          value={element['#return_value']}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default withStates(\n  withDefaultValue(\n    withAttributes(\n      withWrapper(WebformCheckbox, {\n        wrapperProps: {\n          style: {\n            display: 'flex',\n          },\n        },\n      }),\n    ),\n  ),\n);\n","import * as React from 'react';\nimport { useState } from 'react';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withStates from './utils/withStates';\nimport withWrapper from './utils/withWrapper';\n\nconst WebformRating = ({ element, value = 0, setValue, fieldProps }) => {\n  const [hover, setHover] = useState(0);\n  const max = element['#max'] ? element['#max'] : 5;\n  const css = `\nbutton {\n  backgroundColor: 'transparent',\n  border: 'none',\n  outline: 'none',\n  cursor: 'pointer',\n}\n.on {\n  color: rgb(14 165 233);\n  }\n.off {\ncolor: #ccc;\n}\n.star-rating {\nfont-size: 2rem;\n}\n}`;\n  return (\n    <>\n      <div className=\"star-rating\">\n        <input\n          defaultValue={value}\n          name={element['#webform_key']}\n          hidden\n          type=\"range\"\n          {...fieldProps}\n          id={element['#webform_key']}\n        />\n        <style suppressHydrationWarning>{css}</style>\n        {Array(max)\n          .fill(0)\n          .map((star, index) => {\n            index += 1;\n            return (\n              <button\n                type=\"button\"\n                key={index}\n                className={index <= (hover || value) ? 'on' : 'off'}\n                onClick={() => setValue(index)}\n                onMouseEnter={() => setHover(index)}\n                onMouseLeave={() => setHover(value)}\n                disabled={element['#disabled']}\n                hidden={!element['#access']}\n              >\n                <span className=\"star\">&#9733;</span>\n              </button>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default withStates(withDefaultValue(withWrapper(WebformRating)));\n","import * as React from 'react';\nimport { useContext, useEffect, useState } from 'react';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withStates from './utils/withStates';\nimport withAttributes from './utils/withAttributes';\nimport { getChildElements, toKey, WebformContext } from '../utils';\nimport WebformElement from '../WebformElement';\nimport WebformElementWrapper from './wrappers/WebformElementWrapper';\n\nconst WebformEmailConfirm = ({\n  element,\n  error,\n  setValue,\n  labelProps,\n  value,\n  fieldProps,\n  wrapperProps = {},\n}) => {\n  const { registerField } = useContext(WebformContext);\n\n  const [email1, setEmail1] = useState('');\n  const [email2, setEmail2] = useState('');\n\n  React.useEffect(() => {\n    if (element['#parents']) {\n      registerField(toKey(element['#parents']), {\n        validate: () => {\n          if (email1 === email2) {\n            return;\n          }\n\n          return 'The specified email addresses do not match.';\n        },\n      });\n    }\n  });\n  useEffect(() => {\n    // Do not reset value from state when value is empty because the value\n    // changes into an empty value while typing into the field.\n    if (value === '') {\n      return;\n    }\n\n    setEmail1(value);\n    setEmail2(value);\n  }, [value]);\n\n  useEffect(() => {\n    if (!email1 || !email2) {\n      setValue('');\n      return;\n    }\n\n    if (email1 !== email2) {\n      setValue('');\n    } else {\n      setValue(email1);\n    }\n  }, [email1, email2]);\n\n  const children = getChildElements(element);\n  const childElements = children.map((name) => {\n    return (\n      <WebformElement\n        key={name}\n        element={{\n          ...element[name],\n          '#states': element['#states'],\n        }}\n        error={error ? error[name] : null}\n        value={name === 'mail_1' ? email1 : email2}\n        setValue={(value) => {\n          if (name === 'mail_1') {\n            setEmail1(value as string);\n          } else if (name === 'mail_2') {\n            setEmail2(value as string);\n          }\n        }}\n        labelProps={labelProps}\n        fieldProps={fieldProps}\n      />\n    );\n  });\n\n  return (\n    <WebformElementWrapper\n      isRequired={false}\n      labelDisplay=\"none\"\n      error={error}\n      access={element['#access']}\n      {...wrapperProps}\n    >\n      {childElements}\n    </WebformElementWrapper>\n  );\n};\n\nexport default withStates(\n  withDefaultValue(withAttributes(WebformEmailConfirm)),\n);\n","import WebformElementWrapper from './wrappers/WebformElementWrapper';\nimport * as React from 'react';\nimport withStates from './utils/withStates';\n\nconst WebformValue = ({\n  element,\n  error,\n  fieldProps = {},\n  labelProps = {},\n  wrapperProps = {},\n}) => {\n  return (\n    <WebformElementWrapper\n      label={element['#title']}\n      isRequired={element['#required']}\n      labelDisplay={element['#title_display']}\n      access={element['#access']}\n      settings={null}\n      error={error}\n      labelProps={labelProps}\n      {...wrapperProps}\n      labelFor={element['#webform_key']}\n    >\n      <div {...fieldProps} id={element['#webform_key']}>\n        {element['#value']}\n      </div>\n    </WebformElementWrapper>\n  );\n};\n\nexport default withStates(WebformValue);\n","import * as React from 'react';\n\nconst Modal = (props) => {\n  const css = `\n.modal {\n    width: 500px;\n    background: white;\n    border: 1px solid #ccc;\n    transition: 1.1s ease-out;\n    box-shadow: -2rem 2rem 2rem rgba(0, 0, 0, 0.2);\n    filter: blur(0);\n    transform: translate(-50%, -5%);\n    visibility: visible;\n    position: absolute;\n    opacity: 1;\n    left: 50%;\n    z-index: 100;\n}\n.modal.off {\n    opacity: 0;\n    visibility: hidden;\n    filter: blur(8px);\n    transform: scale(0.33);\n    box-shadow: 1rem 0 0 rgba(0, 0, 0, 0.2);\n}\n@supports (offset-rotation: 0deg) {\n    offset-rotation: 0deg;\n    offset-path: path(\"M 250,100 S -300,500 -700,-200\");\n    .modal.off {\n        offset-distance: 100%;\n    }\n}\n@media (prefers-reduced-motion) {\n    .modal {\n        offset-path: none;\n    }\n}\n.modal h2 {\n    border-bottom: 1px solid #ccc;\n    padding: 1rem;\n    margin: 0;\n}\n.modal .content {\n    padding: 1rem;\n}\n.modal .actions {\n    border-top: 1px solid #ccc;\n    background: #eee;\n    padding: 0.5rem 1rem;\n}\n#centered-toggle-button {\n    position: absolute;\n}\n\n`;\n  const onClose = (e) => {\n    props.onClose && props.onClose(e);\n  };\n\n  return props.show ? (\n    <div className=\"modal\" id=\"modal\" onClick={onClose}>\n      <style suppressHydrationWarning>{css}</style>\n      <div className=\"content\">{props.children}</div>\n      <div className=\"actions\">\n        <button className=\"toggle-button\" onClick={onClose}>\n          Close\n        </button>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default Modal;\n","import { WebformCustomComponent } from '../types';\nimport * as React from 'react';\nimport Modal from './Modal';\nimport { useState } from 'react';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withStates from './utils/withStates';\nimport withWrapper from './utils/withWrapper';\nimport withAttributes from './utils/withAttributes';\n\nconst WebformTermsOfService: WebformCustomComponent = ({\n  element,\n  setValue,\n  fieldProps,\n  labelProps,\n}) => {\n  const [show, setShow] = useState(false);\n  const [checkedState, setCheckedState] = useState(\n    element['#checked'] ? element['#checked'] : false,\n  );\n  const [accessState, setAccessState] = useState(\n    element['#access'] ? element['#access'] : true,\n  );\n  const onChangeHandler = async (e) => {\n    setCheckedState(!checkedState);\n    if (e.target.value) {\n      setValue('1');\n    } else {\n      setValue('0');\n    }\n  };\n  // Generate label for the checkbox.\n  const getLabel = () => {\n    const regex = new RegExp(/(.*){(.*)}(.*)/);\n\n    // Link cannot be added if the label doesn't match expected pattern.\n    if (!regex.test(element['#title'])) {\n      return <>{element['#title']}</>;\n    }\n\n    const parts = regex.exec(element['#title']);\n    return (\n      <>\n        {parts[1]}\n        <a\n          href=\"#terms\"\n          role=\"button\"\n          target=\"_blank\"\n          className=\"terms-link\"\n          onClick={(e) => {\n            e.preventDefault();\n            setShow(!show);\n          }}\n        >\n          {parts[2]}\n        </a>\n        {parts[3]}\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div>\n        <input\n          type=\"checkbox\"\n          id={element['#id']}\n          name={element['#webform_key']}\n          onChange={(e) => onChangeHandler(e)}\n          disabled={element['#disabled']}\n          hidden={!accessState}\n          required={element['#required']}\n          readOnly={element['#readonly']}\n          checked={checkedState}\n          {...fieldProps}\n        />\n        <Modal onClose={() => setShow(false)} show={show}>\n          <div\n            dangerouslySetInnerHTML={{\n              __html: element['#terms_content']['#markup'],\n            }}\n          />\n        </Modal>\n        <label htmlFor={element['#id']} {...labelProps}>\n          {getLabel()}\n        </label>\n      </div>\n    </>\n  );\n};\n\nexport default withStates(\n  withDefaultValue(\n    withAttributes(\n      withWrapper(WebformTermsOfService, {\n        labelProps: {\n          style: {\n            display: 'none',\n          },\n        },\n      }),\n    ),\n  ),\n);\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withStates from './utils/withStates';\nimport { getChildElements, toKey, WebformContext } from '../utils';\nimport withAttributes from './utils/withAttributes';\nimport WebformElement from '../WebformElement';\nimport WebformElementWrapper from './wrappers/WebformElementWrapper';\n\nconst WebformDateTime = ({\n  element,\n  setValue,\n  value,\n  error,\n  fieldProps,\n  labelProps,\n  wrapperProps = {},\n}) => {\n  const { registerField } = useContext(WebformContext);\n  const [date = '', time = ''] = (value ?? '').split('T');\n  const dateTime = {\n    date,\n    time,\n  };\n\n  React.useEffect(() => {\n    if (element['#parents']) {\n      registerField(toKey(element['#parents']), {\n        validate: (value: string) => {\n          if (!value) {\n            return;\n          }\n\n          // Ex: 2010-05-10T09:15\n          const re = new RegExp(\n            '^((19|20)\\\\d{2})-((0|1)\\\\d{1})-((0|1|2)\\\\d{1})T(2[0-3]|[01][0-9]):[0-5][0-9]',\n          );\n          // Ex: 2010-05-10T09:15:10\n          const reWithSeconds = new RegExp(\n            '^((19|20)\\\\d{2})-((0|1)\\\\d{1})-((0|1|2)\\\\d{1})T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]',\n          );\n          if (!(re.test(value) || reWithSeconds.test(value))) {\n            return 'The value is invalid. Please fill out every field.';\n          }\n        },\n      });\n    }\n  }, []);\n\n  const children = getChildElements(element);\n  return (\n    <WebformElementWrapper\n      label={element['#title']}\n      labelDisplay={element['#title_display']}\n      access={element['#access']}\n      isRequired={false}\n      error={error}\n      {...wrapperProps}\n    >\n      <div id={element['#id']}>\n        {children.map((name) => {\n          return (\n            <WebformElement\n              key={name}\n              element={{\n                ...element[name],\n                '#webform_key': element['#webform_key'],\n                '#access': element[name]['#access']\n                  ? element[name]['#access']\n                  : element['#access'],\n                '#disabled': element['#disabled'],\n                '#required': element['#required'],\n                '#date_date_min': element['#date_date_min'],\n                '#date_date_max': element['#date_date_max'],\n                '#date_time_min': element['#date_time_min'],\n                '#date_time_max': element['#date_time_max'],\n                '#states': element['#states'],\n              }}\n              error={error ? error[name] : null}\n              setValue={(newValue: string) => {\n                setValue(\n                  `${name === 'date' ? newValue : date}T${\n                    name === 'time' ? newValue : time\n                  }`,\n                );\n              }}\n              labelProps={labelProps}\n              fieldProps={fieldProps}\n              value={dateTime[name] ? dateTime[name] : ''}\n            />\n          );\n        })}\n      </div>\n    </WebformElementWrapper>\n  );\n};\n\nexport default withStates(withDefaultValue(withAttributes(WebformDateTime)));\n","import * as React from 'react';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withAttributes from './utils/withAttributes';\nimport withStates from './utils/withStates';\nimport withWrapper from './utils/withWrapper';\n\nconst WebformTime = ({ element, setValue, value = '', fieldProps }) => {\n  const onChangeHandler = async (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <>\n      <input\n        type=\"time\"\n        name={element['#name']}\n        onChange={(e) => onChangeHandler(e)}\n        disabled={element['#disabled']}\n        hidden={!element['#access']}\n        required={element['#required']}\n        readOnly={element['#readonly']}\n        value={value}\n        {...fieldProps}\n        id={element['#id']}\n        min={element['#date_time_min'] ?? null}\n        max={element['#date_time_max'] ?? null}\n      />\n    </>\n  );\n};\n\nexport default withStates(\n  withDefaultValue(withAttributes(withWrapper(WebformTime))),\n);\n","import * as React from 'react';\nimport { useContext, useEffect, useState } from 'react';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withStates from './utils/withStates';\nimport withAttributes from './utils/withAttributes';\nimport {\n  checkDateMinMax,\n  getChildElements,\n  toKey,\n  WebformContext,\n} from '../utils';\nimport WebformElement from '../WebformElement';\nimport WebformElementWrapper from './wrappers/WebformElementWrapper';\n\nconst WebformDateList = ({\n  element,\n  error,\n  setValue,\n  fieldProps,\n  labelProps,\n  wrapperProps = {},\n}) => {\n  const [dateList, setDateList] = useState({});\n  const children = getChildElements(element);\n  const { registerField } = useContext(WebformContext);\n\n  React.useEffect(() => {\n    if (element['#parents']) {\n      registerField(toKey(element['#parents']), {\n        validate: (value: string) => {\n          if (!value) {\n            return;\n          }\n\n          // Ex: 2010-05-10T09:15\n          const re = new RegExp(\n            '^((19|20)\\\\d{2})-((0|1)\\\\d{1})-((0|1|2)\\\\d{1})T(2[0-3]|[01][0-9]):[0-5][0-9]',\n          );\n          // Ex: 2010-05-10T09:15:10\n          const reWithSeconds = new RegExp(\n            '^((19|20)\\\\d{2})-((0|1)\\\\d{1})-((0|1|2)\\\\d{1})T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]',\n          );\n          if (!(re.test(value) || reWithSeconds.test(value))) {\n            return 'The value is invalid. Please fill out every field.';\n          }\n          return checkDateMinMax(value, element);\n        },\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    // When every value of the date list element is filled out then we can set the value.\n    if (\n      Object.keys(dateList)[0] &&\n      Object.values(dateList).every((i) => i !== null)\n    ) {\n      let twentyFourHour;\n      const isPM = dateList['ampm'] && dateList['ampm'] === 'pm';\n      // Use military time for the hour if am/pm is used.\n      if (dateList['hour']) {\n        if (isPM) {\n          twentyFourHour = dateList['hour'] + 12;\n        } else {\n          twentyFourHour = dateList['hour'];\n        }\n      } else if (isPM) {\n        // If the hour is not part of the form but the am/pm is then it should be 12.\n        twentyFourHour = 12;\n      } else {\n        twentyFourHour = '00';\n      }\n\n      let monthAsNum;\n      if (dateList['month']) {\n        const monthOptions = element['month']['#options'];\n        // Get the number value of the month. ex) May -> 5\n        monthAsNum = Object.keys(monthOptions).find(\n          (key) => monthOptions[key] === dateList['month'],\n        );\n      } else {\n        // Add fallback values if the unit is not part of the date list like in Webform.\n        monthAsNum = '1';\n      }\n      // Add fallback values if the unit is not part of the date list like in Webform.\n      const day = dateList['day'] ? dateList['day'] : '1';\n      const year = dateList['year']\n        ? dateList['year']\n        : new Date().getFullYear();\n      const hour = twentyFourHour;\n      const minute = dateList['minute'] ? dateList['minute'] : '00';\n      const second = dateList['second'] ? dateList['second'] : null;\n      if (!second) {\n        setValue(\n          `${year}-${padZero(monthAsNum)}-${padZero(day)}T${padZero(\n            hour,\n          )}:${minute}`,\n        );\n      } else {\n        setValue(\n          `${year}-${padZero(monthAsNum)}-${padZero(day)}T${padZero(\n            hour,\n          )}:${minute}:${second}`,\n        );\n      }\n    } else {\n      if (Object.values(dateList).some((i) => i !== null)) {\n        setValue(dateList);\n      }\n    }\n  }, [dateList]);\n\n  useEffect(() => {\n    children.map((name) => {\n      // Initialize dateList object keys with units.\n      setDateList((prevState) => {\n        return {\n          ...prevState,\n          [name]: null,\n        };\n      });\n    });\n  }, []);\n\n  const padZero = (num) => {\n    if (num <= 9) {\n      num = '0' + num;\n      return num;\n    } else {\n      return num;\n    }\n  };\n\n  return (\n    <WebformElementWrapper\n      label={element['#title']}\n      labelDisplay={element['#title_display']}\n      access={element['#access']}\n      isRequired={false}\n      error={error}\n      {...wrapperProps}\n    >\n      <div id={element['#id']}>\n        {children.map((name, index) => {\n          return (\n            <WebformElement\n              key={index}\n              element={{\n                ...element[name],\n                '#webform_key': element['#webform_key'],\n                '#disabled': element['#disabled'],\n                '#access': element['#access'],\n                '#required': element['#required'],\n                '#states': element['#states'],\n              }}\n              error={error ? error[name] : null}\n              setValue={(newValue) => {\n                setDateList({ ...dateList, [name]: newValue });\n              }}\n              labelProps={labelProps}\n              fieldProps={fieldProps}\n              value={dateList[name] ? dateList[name] : ''}\n            />\n          );\n        })}\n      </div>\n    </WebformElementWrapper>\n  );\n};\n\nexport default withStates(withDefaultValue(withAttributes(WebformDateList)));\n","import * as React from 'react';\nimport {\n  checkDateMinMax,\n  convertDateToISO,\n  toKey,\n  WebformContext,\n} from '../utils';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withStates from './utils/withStates';\nimport withWrapper from './utils/withWrapper';\nimport withAttributes from './utils/withAttributes';\nimport { useContext } from 'react';\n\nconst WebformDate = ({ element, setValue, value = '', fieldProps }) => {\n  const { registerField } = useContext(WebformContext);\n\n  const onChangeHandler = async (e) => {\n    setValue(e.target.value);\n  };\n\n  React.useEffect(() => {\n    if (element['#parents']) {\n      registerField(toKey(element['#parents']), {\n        validate: (value: string) => {\n          if (!value) {\n            return;\n          }\n          return checkDateMinMax(value, element);\n        },\n      });\n    }\n  }, []);\n\n  return (\n    <>\n      <input\n        onChange={(e) => onChangeHandler(e)}\n        type={element['#type']}\n        name={element['#name']}\n        disabled={element['#disabled']}\n        hidden={!element['#access']}\n        required={element['#required']}\n        readOnly={element['#readonly']}\n        value={value}\n        {...fieldProps}\n        id={element['#id']}\n        min={\n          element['#date_date_min']\n            ? convertDateToISO(element['#date_date_min'])\n            : null\n        }\n        max={\n          element['#date_date_max']\n            ? convertDateToISO(element['#date_date_max'])\n            : null\n        }\n      />\n    </>\n  );\n};\n\nexport default withStates(\n  withDefaultValue(withAttributes(withWrapper(WebformDate))),\n);\n","import * as React from 'react';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withStates from './utils/withStates';\n\nconst WebformItem = ({ element }) => {\n  return element['#access'] === false ? null : (\n    <div>\n      <label>{element['#title']}</label>\n    </div>\n  );\n};\n\nexport default withStates(withDefaultValue(WebformItem));\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport { WebformContext } from '../utils';\n\nconst WebformActions = ({ element, wrapperProps }) => {\n  const buttons = [];\n  const { registry, setData } = useContext(WebformContext);\n\n  const supportedButtons = {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    submit: () => {},\n    reset: (e) => {\n      e.preventDefault();\n      setData(() => {\n        return {};\n      });\n    },\n  };\n\n  const WebformButton = registry.getComponent('button');\n  Object.keys(supportedButtons).forEach((key) => {\n    if (element[key]) {\n      buttons.push(\n        <WebformButton\n          element={element[key]}\n          fieldProps={{ type: 'submit', onClick: supportedButtons[key] }}\n          key={key}\n        />,\n      );\n    }\n  });\n\n  return <div {...wrapperProps}>{buttons}</div>;\n};\n\nexport default WebformActions;\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { WebformElementProps } from '../types';\nimport withStates from './utils/withStates';\nimport withWrapper from './utils/withWrapper';\nimport WebformElement from '../WebformElement';\nimport { getChildElements } from '../utils';\nimport withAttributes from './utils/withAttributes';\n\nconst supportedTypes = {\n  radios: 'radio',\n  checkboxes: 'checkbox',\n  webform_radios_other: 'radio',\n  webform_checkboxes_other: 'checkbox',\n  webform_entity_checkboxes: 'checkbox',\n  webform_entity_radios: 'radio',\n};\n\n// Component for checkboxes or radio buttons that are an options list.\nconst WebformCheckboxRadioGroup = ({\n  element,\n  value = [],\n  setValue,\n  error,\n  fieldProps,\n}: WebformElementProps) => {\n  if (!(element['#type'] in supportedTypes)) {\n    throw new Error(\n      `${element['#type']} which was used on ${element['#webform_key']} is not supported by WebformCheckboxRadioGroup.`,\n    );\n  }\n\n  const [valueOther, setValueOther] = useState(null);\n  const [showInputForOther, setShowInputForOther] = useState(false);\n\n  const type = supportedTypes[element['#type']];\n  const withOther =\n    element['#type'] === 'webform_checkboxes_other' ||\n    element['#type'] === 'webform_radios_other';\n  const elementForOther = withOther ? element['other'] : null;\n\n  function getOptions() {\n    let options = {};\n    const finalOptions = {};\n    if (withOther) {\n      for (const key of Object.keys(element)) {\n        if (key === 'radios' || key === 'checkboxes') {\n          options = element[key];\n        }\n      }\n    } else {\n      options = element;\n    }\n\n    for (const option of Object.keys(options['#options'])) {\n      if (option !== '_other_') {\n        finalOptions[option] = options['#options'][option];\n      }\n    }\n    return finalOptions;\n  }\n\n  const options = getOptions();\n\n  useEffect(() => {\n    if (element['#default_value'] && !element['#default_value']['headers']) {\n      setValue(element['#default_value']);\n\n      const defaultValues =\n        typeof element['#default_value'] === 'string'\n          ? [element['#default_value']]\n          : element['#default_value'];\n      const normalizedDefaultValues = defaultValues.filter((option) => {\n        return Object.hasOwn(options, option);\n      });\n\n      if (type === 'checkbox') {\n        setValue(normalizedDefaultValues);\n      }\n\n      if (\n        withOther &&\n        Object.keys(defaultValues).length !==\n          Object.keys(normalizedDefaultValues).length\n      ) {\n        for (const defaultValue of defaultValues) {\n          if (!Object.hasOwn(options, defaultValue)) {\n            setValueOther(defaultValue);\n          }\n        }\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (valueOther && type === 'checkbox') {\n      setValue([...(Array.isArray(value) ? value : []), valueOther]);\n    } else if (valueOther && type === 'radio') {\n      setValue(valueOther);\n    }\n  }, [valueOther]);\n\n  const childElements = getChildElements(element).map((name) => {\n    // Option lists without an 'Other' option.\n    if (name !== 'other' && name !== 'radios' && name !== 'checkboxes') {\n      return (\n        <WebformElement\n          key={name}\n          element={{\n            ...element[name],\n            '#webform_key': element['#webform_key'],\n            '#states': element['#states'],\n            '#access': element['#access'],\n          }}\n          fieldProps={fieldProps}\n          setValue={(newValue) => {\n            if (\n              element['#type'] === 'checkboxes' ||\n              element['#type'] === 'webform_entity_checkboxes'\n            ) {\n              if (newValue === true) {\n                setValue([\n                  ...(Array.isArray(value) ? value : []),\n                  element[name]['#return_value'],\n                ]);\n              } else {\n                if (Array.isArray(value) && value.length) {\n                  const filtered = value.filter(\n                    (i) => i !== element[name]['#return_value'],\n                  );\n                  setValue(filtered);\n                }\n              }\n            } else {\n              setValue(element[name]['#return_value']);\n            }\n          }}\n          value={\n            (Array.isArray(value) &&\n              value.includes(element[name]['#return_value'])) ||\n            value === element[name]['#return_value']\n          }\n          error={error}\n        />\n      );\n      // The element has an 'Other' option if the child element key is 'checkboxes' or 'radios' so we need to\n      // go one level deeper to get the list of options.\n    } else if (name == 'checkboxes' || name == 'radios') {\n      return getChildElements(element[name]).map((option) => {\n        return (\n          <WebformElement\n            fieldProps={fieldProps}\n            key={option}\n            element={{\n              ...element[name][option],\n              '#webform_key': element['#webform_key'],\n              '#states': element['#states'],\n              '#access': element['#access'],\n            }}\n            setValue={(newValue) => {\n              if (element[name][option]['#type'] === 'checkbox') {\n                if (element[name][option]['#return_value'] === '_other_') {\n                  if (newValue) {\n                    setValueOther(valueOther ?? '');\n                    setShowInputForOther(true);\n                  } else {\n                    setShowInputForOther(false);\n                    setValueOther(null);\n                  }\n                } else {\n                  if (newValue === true) {\n                    setValue([\n                      ...(Array.isArray(value) ? value : []),\n                      element[name][option]['#return_value'],\n                    ]);\n                  } else {\n                    if (Array.isArray(value) && value.length) {\n                      const filtered = value.filter(\n                        (i) => i !== element[name][option]['#return_value'],\n                      );\n                      setValue(filtered);\n                    }\n                  }\n                }\n              } else {\n                if (element[name][option]['#return_value'] === '_other_') {\n                  setValueOther(valueOther ?? '');\n                  setValue(valueOther ?? '');\n                  setShowInputForOther(true);\n                } else {\n                  setShowInputForOther(false);\n                  setValueOther(null);\n                  setValue(element[name][option]['#return_value']);\n                }\n              }\n            }}\n            value={\n              (Array.isArray(value) &&\n                value.includes(element[name][option]['#return_value'])) ||\n              value === element[name][option]['#return_value'] ||\n              (element[name][option]['#return_value'] === '_other_' &&\n                showInputForOther)\n            }\n            error={error}\n          />\n        );\n      });\n    }\n  });\n\n  return (\n    <>\n      {childElements}\n      {withOther && showInputForOther ? (\n        <WebformElement\n          element={{\n            ...element,\n            '#type': elementForOther['#type'],\n            '#webform_key': element['#webform_key'],\n            '#title': elementForOther['#title'],\n            '#description': elementForOther['#description'],\n            '#id': `${element['#id']}-other-input`,\n          }}\n          value={valueOther}\n          setValue={(newValue) => {\n            setValueOther(newValue as string);\n          }}\n        />\n      ) : null}\n    </>\n  );\n};\nexport default withStates(\n  withAttributes(\n    withWrapper(WebformCheckboxRadioGroup, {\n      defaultWrapperType: 'fieldset',\n      labelFor: false,\n    }),\n  ),\n);\n","import WebformElementWrapper from './wrappers/WebformElementWrapper';\nimport * as React from 'react';\nimport withStates from './utils/withStates';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withAttributes from './utils/withAttributes';\nimport withWrapper from './utils/withWrapper';\n\nconst WebformMarkup = ({\n  element,\n  error,\n  fieldProps = {},\n  labelProps = {},\n  wrapperProps = {},\n}) => {\n  return (\n    <WebformElementWrapper\n      label={element['#title']}\n      isRequired={element['#required']}\n      labelDisplay={element['#title_display']}\n      access={element['#access']}\n      settings={null}\n      error={error}\n      labelProps={labelProps}\n      {...wrapperProps}\n      labelFor={element['#webform_key']}\n    >\n      <div\n        {...fieldProps}\n        id={element['#webform_key']}\n        dangerouslySetInnerHTML={{\n          __html: element['#message_message']['#markup'],\n        }}\n      />\n    </WebformElementWrapper>\n  );\n};\n\nexport default withStates(\n  withDefaultValue(\n    withAttributes(\n      withWrapper(WebformMarkup, {\n        wrapperProps: {\n          style: {\n            display: 'flex',\n          },\n        },\n      }),\n    ),\n  ),\n);\n","import WebformElementWrapper from './wrappers/WebformElementWrapper';\nimport * as React from 'react';\nimport withStates from './utils/withStates';\nimport withDefaultValue from './utils/withDefaultValue';\nimport withAttributes from './utils/withAttributes';\nimport withWrapper from './utils/withWrapper';\n\nconst WebformMessage = ({\n  element,\n  error,\n  fieldProps = {},\n  labelProps = {},\n  wrapperProps = {},\n}) => {\n  return (\n    <WebformElementWrapper\n      label={element['#title']}\n      isRequired={element['#required']}\n      labelDisplay={element['#title_display']}\n      access={element['#access']}\n      settings={null}\n      error={error}\n      labelProps={labelProps}\n      {...wrapperProps}\n      labelFor={element['#webform_key']}\n    >\n      <div\n        {...fieldProps}\n        id={element['#webform_key']}\n        dangerouslySetInnerHTML={{\n          __html: element['#message_message']['#markup'],\n        }}\n      />\n    </WebformElementWrapper>\n  );\n};\n\nexport default withStates(\n  withDefaultValue(\n    withAttributes(\n      withWrapper(WebformMessage, {\n        wrapperProps: {\n          style: {\n            display: 'flex',\n          },\n        },\n      }),\n    ),\n  ),\n);\n","import * as React from 'react';\nimport withAttributes from './utils/withAttributes';\n\nconst WebformButton = ({ element, fieldProps }) => {\n  return (\n    <button type=\"button\" {...fieldProps}>\n      {element['#value']}\n    </button>\n  );\n};\n\nexport default withAttributes(WebformButton);\n","import * as React from 'react';\nimport withAttributes, { normalizeAttributes } from './utils/withAttributes';\nimport { getChildElements, WebformContext } from '../utils';\nimport WebformElement from '../WebformElement';\nimport { useContext } from 'react';\nimport { PropsType, WebformElementProps } from '../types';\n\nexport interface WebformTableRowProps extends WebformElementProps {\n  tdProps?: PropsType;\n}\n\nconst WebformTableRow = ({\n  element,\n  error,\n  fieldProps = {},\n  tdProps = {},\n}: WebformTableRowProps) => {\n  const { data, setData } = useContext(WebformContext);\n  return (\n    <tr {...fieldProps}>\n      {getChildElements(element).map((key) => {\n        const rowAndChildStates = element['#states']\n          ? {\n              ...element[key]['#states'],\n              ...element['#states'],\n            }\n          : null;\n        const parentAndRowAndChildStates = element['#states']\n          ? Object.assign({}, rowAndChildStates, element['#states'])\n          : rowAndChildStates;\n        return (\n          <td\n            {...{\n              ...tdProps,\n              ...normalizeAttributes(element[key]['#wrapper_attributes'] ?? {}),\n            }}\n            key={key}\n          >\n            <WebformElement\n              element={{\n                ...(parentAndRowAndChildStates\n                  ? {\n                      '#states': parentAndRowAndChildStates,\n                      ...element[key],\n                    }\n                  : element[key]),\n                // Make sure `#wrapper_attributes` is only applied once.\n                '#wrapper_attributes': [],\n              }}\n              error={error}\n              key={key}\n              value={data[element[key]['#webform_key']]}\n              setValue={(value) => {\n                setData((previousData) => {\n                  return {\n                    ...previousData,\n                    [element[key]['#webform_key']]: value,\n                  };\n                });\n              }}\n            />\n          </td>\n        );\n      })}\n    </tr>\n  );\n};\n\nexport default withAttributes(WebformTableRow);\n","import * as React from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst ConfirmationPage = ({ webform, submission }) => {\n  const defaultMessage = (\n    <>\n      New submission added to <em>{webform.title}</em>.\n    </>\n  );\n  return (\n    <div>\n      {webform.confirmation.message && webform.confirmation.message.length > 0\n        ? webform.confirmation.message\n        : defaultMessage}\n    </div>\n  );\n};\n\nexport default ConfirmationPage;\n","import * as React from 'react';\n\nconst DebugConfirmation = ({ submission }) => {\n  return (\n    <pre>\n      <code id=\"submitted-data\">{JSON.stringify(submission)}</code>\n    </pre>\n  );\n};\n\nexport default DebugConfirmation;\n","import * as React from 'react';\nimport { useContext, useState } from 'react';\nimport { WebformElementProps } from '../types';\nimport withAttributes from './utils/withAttributes';\nimport withStates from './utils/withStates';\nimport { getChildElements, WebformContext } from '../utils';\nimport WebformElement from '../WebformElement';\nimport withWrapper from './utils/withWrapper';\n\nconst WizardPage = ({ element, fieldProps }: WebformElementProps) => {\n  const { data, setData, errors } = useContext(WebformContext);\n\n  const childElements = getChildElements(element).map((key) => {\n    const parentAndChildStates = element['#states']\n      ? { ...element[key]['#states'], ...element['#states'] }\n      : null;\n    return (\n      <WebformElement\n        key={element[key]['#webform_key']}\n        element={\n          parentAndChildStates\n            ? {\n                ...element[key],\n                '#states': parentAndChildStates,\n                '#access': true,\n              }\n            : { ...element[key], '#access': true }\n        }\n        error={errors[element[key]['#webform_key']]}\n        value={data[element[key]['#webform_key']]}\n        setValue={(value) => {\n          setData((previousData) => {\n            return {\n              ...previousData,\n              [element[key]['#webform_key']]: value,\n            };\n          });\n        }}\n      />\n    );\n  });\n\n  return (\n    <>\n      <div {...fieldProps}>{childElements}</div>\n    </>\n  );\n};\n\nexport default withStates(\n  withAttributes(withWrapper(WizardPage, { defaultWrapperType: 'container' })),\n);\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { getChildElements } from '../utils';\nimport WizardPage from './WizardPage';\nimport WebformElement from '../WebformElement';\n\nconst MultiPageForm = ({ elements }) => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const children = getChildElements(elements);\n  const pageElement = elements[children[currentPage]];\n  const showPrevBtn = currentPage > 0;\n  const showSubmitBtn = currentPage === children.length - 1;\n  const submitBtnElement = elements['actions'];\n  const highlightCurrent = (item) => {\n    if (pageElement['#title'] == elements[item]['#title']) {\n      return { color: 'blue' };\n    }\n  };\n\n  return (\n    <div>\n      <ul style={{ display: 'flex' }}>\n        {children.map((item) => {\n          return (\n            <li style={highlightCurrent(item)} key={item}>\n              {elements[item]['#title']}----{'>'}\n            </li>\n          );\n        })}\n      </ul>\n      <br />\n      <h1>Page Title: {pageElement['#title']}</h1>\n      <h1>Current page: {currentPage + 1}</h1>\n      <WizardPage element={{ ...pageElement }} />\n      {showPrevBtn && (\n        <button\n          style={{ border: 'solid' }}\n          type=\"button\"\n          className={'webform-button--previous'}\n          onClick={() => setCurrentPage((prevState) => prevState - 1)}\n        >\n          Previous\n        </button>\n      )}\n      {!showSubmitBtn && (\n        <button\n          style={{ border: 'solid' }}\n          type=\"button\"\n          onClick={() => setCurrentPage((prevState) => prevState + 1)}\n        >\n          Next\n        </button>\n      )}\n      {showSubmitBtn && <WebformElement element={submitBtnElement} />}\n    </div>\n  );\n};\n\nexport default MultiPageForm;\n","import * as React from 'react';\nimport { useContext, useEffect } from 'react';\nimport { getChildElements, WebformContext } from '../utils';\nimport WebformElement from '../WebformElement';\nimport DebugConfirmation from './DebugConfirmation';\nimport MultiPageForm from './MultiPageForm';\n\nconst FormLayout = ({ webform, status }) => {\n  const { registry, setData, data, errors } = useContext(WebformContext);\n  const { elements, confirmation } = webform;\n  const children = getChildElements(elements);\n\n  const renderConfirmationPage = () => {\n    const ConfirmationPage = registry.getComponent('confirmation_page');\n    return <ConfirmationPage webform={webform} submission={data} />;\n  };\n  const isMultiPageForm = children.some((i) => {\n    return elements[i]['#type'] === 'webform_wizard_page';\n  });\n\n  useEffect(() => {\n    if (confirmation.type !== 'debug' || status === 'success') {\n      return;\n    }\n    // Store Webform debug data in local storage so that it can be retrieved\n    // after submission.\n    window.localStorage.setItem('webformDebugData', JSON.stringify(data));\n  }, [data, status, confirmation.type]);\n\n  const renderChildren = () => {\n    return (\n      <>\n        {children.map((key) => (\n          <WebformElement\n            key={elements[key]['#webform_key']}\n            element={elements[key]}\n            setValue={(value) => {\n              setData((previousData) => {\n                return {\n                  ...previousData,\n                  [elements[key]['#webform_key']]: value,\n                };\n              });\n            }}\n            value={data[elements[key]['#webform_key']]}\n            error={errors[elements[key]['#webform_key']]}\n          />\n        ))}\n      </>\n    );\n  };\n\n  if (status === 'success') {\n    if (confirmation.type === 'debug') {\n      const debugData = (() => {\n        if (typeof window === 'undefined') {\n          return data;\n        }\n\n        return JSON.parse(window.localStorage.getItem('webformDebugData'));\n      })();\n\n      return <DebugConfirmation submission={debugData} />;\n    } else if (confirmation.type === 'page' || confirmation.type === 'inline') {\n      return renderConfirmationPage();\n    } else if (confirmation.type === 'message') {\n      const Message = registry.getComponent('message');\n      const defaultMessage = (\n        <>\n          New submission added to <em>{webform.title}</em>.\n        </>\n      );\n\n      return (\n        <>\n          <Message type=\"success\">\n            {webform.confirmation.message &&\n            webform.confirmation.message.length > 0\n              ? webform.confirmation.message\n              : defaultMessage}\n          </Message>\n          {renderChildren()}\n        </>\n      );\n    } else if (confirmation.type === 'none') {\n      return renderChildren();\n    }\n  }\n\n  if (isMultiPageForm) {\n    // Fix for element access on Wizard.\n    for (const [key, value] of Object.entries(elements)) {\n      if (typeof value === 'object' && value !== null) {\n        const keys2 = Object.keys(value);\n        const hasValue = keys2.includes('#access');\n        if (hasValue) {\n          elements[key]['#access'] = true;\n          accessChildrenElements(elements[key]);\n        }\n      }\n    }\n    return <MultiPageForm elements={elements}></MultiPageForm>;\n  } else {\n    return renderChildren();\n  }\n};\n\nconst accessChildrenElements = (element : any) => {\n  Object.entries(element).forEach( (item : any) => {\n    for (const [key, value] of Object.entries(item)) {\n      if (typeof value === 'object' && value !== null) {\n        const keys2 = Object.keys(value);\n        const hasValue = keys2.includes('#access');\n        if (hasValue) {\n          item[key]['#access'] = true;\n          accessChildrenElements(item[key]);\n        }\n      }\n    }\n  });\n  return true;\n}\n\n\nexport default FormLayout;\n","import WebformAutocomplete from './WebformAutocomplete';\nimport WebformText from './WebformText';\nimport WebformSelect from './WebformSelect';\nimport WebformTextArea from './WebformTextArea';\nimport ComponentRegistry from '../ComponentRegistry';\nimport WebformMultifield from './WebformMultifield';\nimport WebformComposite from './WebformComposite';\nimport WebformContainer from './WebformContainer';\nimport WebformFlexboxLayout from './WebformFlexboxLayout';\nimport WebformFieldset from './WebformFieldset';\nimport WebformSection from './WebformSection';\nimport WebformTable from './WebformTable';\nimport WebformRange from './WebformRange';\nimport WebformCheckbox from './WebformCheckbox';\nimport WebformRating from './WebformRating';\nimport WebformEmailConfirm from './WebformEmailConfirm';\nimport WebformValue from './WebformValue';\nimport WebformTermsOfService from './WebformTermsOfService';\nimport WebformDateTime from './WebformDateTime';\nimport WebformTime from './WebformTime';\nimport WebformDateList from './WebformDateList';\nimport WebformDate from './WebformDate';\nimport WebformItem from './WebformItem';\nimport WebformActions from './WebformActions';\nimport WebformCheckboxRadioGroup from './WebformCheckboxRadioGroup';\nimport WebformMarkup from './WebformMarkup';\nimport WebformMessage from './WebformMessage';\nimport WebformButton from './WebformButton';\nimport WebformTableRow from './WebformTableRow';\nimport ConfirmationPage from './ConfirmationPage';\nimport FormLayout from './FormLayout';\nimport Message from './Message';\nimport WizardPage from './WizardPage';\nimport WebformCustomComposite from './WebformCustomComposite';\n\nconst defaultComponents = {\n  // Text types.\n  textfield: WebformText,\n  number: WebformText,\n  hidden: WebformText,\n  email: WebformText,\n  search: WebformText,\n  tel: WebformText,\n  url: WebformText,\n  textarea: WebformTextArea,\n\n  // Elements with fixed values.\n  autocomplete: WebformAutocomplete,\n  checkbox: WebformCheckbox,\n  checkboxes: WebformCheckboxRadioGroup,\n  entity_autocomplete: WebformAutocomplete,\n  range: WebformRange,\n  radio: WebformCheckbox,\n  radios: WebformCheckboxRadioGroup,\n  select: WebformSelect,\n  webform_autocomplete: WebformAutocomplete,\n  webform_checkboxes_other: WebformCheckboxRadioGroup,\n  webform_entity_checkboxes: WebformCheckboxRadioGroup,\n  webform_entity_radios: WebformCheckboxRadioGroup,\n  webform_radios_other: WebformCheckboxRadioGroup,\n  webform_rating: WebformRating,\n  webform_select_other: WebformSelect,\n  webform_terms_of_service: WebformTermsOfService,\n\n  // Containers.\n  container: WebformContainer,\n  fieldset: WebformFieldset,\n  webform_flexbox: WebformFlexboxLayout,\n  webform_section: WebformSection,\n  webform_table: WebformTable,\n  webform_table_row: WebformTableRow,\n\n  // Composite types.\n  webform_address: WebformComposite,\n  webform_contact: WebformComposite,\n  webform_name: WebformComposite,\n  webform_link: WebformComposite,\n  webform_custom_composite: WebformCustomComposite,\n\n  // Datetime types.\n  date: WebformDate,\n  datelist: WebformDateList,\n  datetime: WebformDateTime,\n  webform_time: WebformTime,\n\n  button: WebformButton,\n  submit: WebformActions,\n  item: WebformItem,\n  value: WebformValue,\n  webform_actions: WebformActions,\n  webform_email_confirm: WebformEmailConfirm,\n  webform_multiple: WebformMultifield,\n\n  // Non-form element components.\n  confirmation_page: ConfirmationPage,\n  form_layout: FormLayout,\n  message: Message,\n  webform_wizard_page: WizardPage,\n\n  // Custom Messages, Markup (Work in progress)\n  webform_message: WebformMessage,\n  webform_markup: WebformMarkup,\n};\n\nexport const defaultComponentRegistry = new ComponentRegistry(\n  defaultComponents,\n);\n\nexport default defaultComponents;\n","import * as React from 'react';\nimport WebformElement from '../WebformElement';\nimport { getChildElements } from '../utils';\nimport { useEffect } from 'react';\nimport WebformMultifield from './WebformMultifield';\nimport WebformElementWrapper from './wrappers/WebformElementWrapper';\n\nexport const WebformCustomComposite = ({\n  element,\n  error,\n  value,\n  setValue,\n  labelProps,\n}) => {\n  const compositeElements = getChildElements(element['#element']);\n  const isMulti = !!element['add'];\n\n  useEffect(() => {\n    // The custom composite component handles setting default value.\n    if (element['#default_value'] && Array.isArray(element['#default_value'])) {\n      setValue(element['#default_value']);\n    } else {\n      setValue([{}]);\n    }\n  }, []);\n\n  return (\n    <>\n      {isMulti ? (\n        <>\n          <WebformMultifield\n            element={element}\n            value={value}\n            setValue={setValue}\n            error={error}\n          />\n        </>\n      ) : (\n        <WebformElementWrapper\n          label={element['#title']}\n          labelDisplay={element['#title_display']}\n          access={element['#access']}\n          isRequired={false}\n          error={error}\n        >\n          {compositeElements.map((name, index) => {\n            const elementItem = element.items['0'][name];\n            return (\n              <WebformElement\n                key={index}\n                element={{\n                  ...elementItem,\n                  // Ensure that all child elements have '#webform_key' and '#states' defined.\n                  '#webform_key': name,\n                  '#states': element['#_webform_states'],\n                  '#id': elementItem['#id'],\n                  '#default_value': undefined,\n                }}\n                value={value && value[0][name] ? value[0][name] : ''}\n                setValue={(newValue) => {\n                  // A single value custom composite element needs to be an object\n                  // wrapped in an array [{}]. So check first if the object\n                  // exists yet and if so, create a new object with the existing object and the new value.\n                  // Otherwise, create an object with the new key and value inside an array.\n                  if (value && value[0]) {\n                    setValue([{ ...value[0], [name]: newValue }]);\n                  } else {\n                    setValue([{ [name]: newValue }]);\n                  }\n                }}\n                error={error ? error[name] : null}\n                labelProps={labelProps}\n              />\n            );\n          })}\n        </WebformElementWrapper>\n      )}\n    </>\n  );\n};\n\nexport default WebformCustomComposite;\n","import * as React from 'react';\n\nexport type messagePropTypes = {\n  children: React.ReactNode;\n  type: 'error' | 'warning' | 'status' | 'success';\n};\nconst Message = ({ children, type }: messagePropTypes) => {\n  return <div>{children}</div>;\n};\n\nexport default Message;\n","import * as React from 'react';\nimport { WebformElementProps } from './types';\n\nclass ComponentRegistry {\n  private _registry: Map<string, React.FC<WebformElementProps | any>>;\n\n  constructor(registry = {}) {\n    this._registry = new Map();\n    Object.keys(registry).forEach((key) => {\n      this._registry.set(key, registry[key]);\n    });\n  }\n\n  // get a component by id, if not available we return null\n  getComponent = (key: string) => {\n    return this._registry.get(key) ?? null;\n  };\n\n  setComponent = (key: string, component: React.FC<WebformElementProps>) => {\n    this._registry.set(key, component);\n  };\n}\n\nexport default ComponentRegistry;\n","import * as React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport deepmerge from 'deepmerge';\nimport {\n  ErrorObjectType,\n  setDataFn,\n  WebformDataType,\n  WebformProps,\n  FieldRegistry,\n  StatusType,\n  setStatusFn,\n} from './types';\nimport {\n  WebformContext,\n  useConstructor,\n  arrayMerge,\n  isFunction,\n  setIn,\n} from './utils';\nimport { defaultOnSubmit } from './next/utils';\nimport { defaultComponentRegistry } from './components';\n\nexport class WebformError extends Error {\n  response: string;\n\n  constructor(response: string) {\n    super();\n\n    this.response = response;\n  }\n}\n\n/**\n * Errors returned by Drupal.\n */\nexport type WebformErrors = {\n  [name: string]: string;\n};\n\nexport const Webform = ({\n  data: webformObject,\n  id,\n  customComponents = {},\n  onSubmit: customOnSubmit,\n  apiUrl = '/api/webform',\n  validate,\n  ...formProps\n}: WebformProps) => {\n  const componentRegistry = defaultComponentRegistry;\n  useConstructor(() => {\n    // Register components on the initial load.\n    Object.keys(customComponents).forEach((key) => {\n      componentRegistry.setComponent(key, customComponents[key]);\n    });\n  });\n  // Update component library when `customComponents` changes. This ensures that\n  // the component library is kept in a consistent state with hot module\n  // replacement.\n  useEffect(() => {\n    Object.keys(customComponents).forEach((key) => {\n      componentRegistry.setComponent(key, customComponents[key]);\n    });\n  }, [customComponents]);\n\n  const [errors, setErrors] = useState<ErrorObjectType>({});\n  const [status, setStatus]: [StatusType, setStatusFn] = useState();\n  const [data, setData]: [WebformDataType, setDataFn] = useState({});\n\n  const fieldRegistry = useRef<FieldRegistry>({});\n  const registerField = React.useCallback((name: string, { validate }: any) => {\n    fieldRegistry.current[name] = {\n      validate,\n    };\n  }, []);\n\n  const unregisterField = React.useCallback((name: string) => {\n    delete fieldRegistry.current[name];\n  }, []);\n\n  const onSubmit = customOnSubmit ? customOnSubmit : defaultOnSubmit;\n\n  const WebformForm = componentRegistry.getComponent('form_layout');\n  const Message = componentRegistry.getComponent('message');\n\n  const runSingleFieldLevelValidation = (\n    field: string,\n    value: void | string,\n  ): Promise<string> => {\n    return new Promise((resolve) =>\n      resolve(fieldRegistry.current[field].validate(value) as string),\n    );\n  };\n\n  const runFieldValidators = (values: WebformDataType) => {\n    const fieldKeysWithValidation: string[] = Object.keys(\n      fieldRegistry.current,\n    ).filter((key) => isFunction(fieldRegistry.current[key].validate));\n    const fieldValidations: Promise<string>[] = fieldKeysWithValidation.map(\n      (key) => runSingleFieldLevelValidation(key, values[key] as string),\n    );\n    return Promise.all(fieldValidations).then((fieldErrorsList: string[]) => {\n      return fieldErrorsList.reduce(\n        (previousValue, currentValue, currentIndex) => {\n          if (currentValue === undefined) {\n            return previousValue;\n          }\n\n          setIn(\n            previousValue,\n            fieldKeysWithValidation[currentIndex],\n            currentValue,\n          );\n          return previousValue;\n        },\n        {},\n      );\n    });\n  };\n\n  const runValidators = (values: WebformDataType) => {\n    return Promise.all([\n      runFieldValidators(values),\n      validate ? validate(values) : {},\n    ]).then(([fieldErrors, validateErrors]) => {\n      return deepmerge.all([fieldErrors, validateErrors], { arrayMerge });\n    });\n  };\n\n  return (\n    <form\n      {...formProps}\n      onSubmit={(event) => {\n        event.preventDefault();\n        runValidators(data).then((combinedErrors: WebformErrors) => {\n          if (Object.keys(combinedErrors).length !== 0) {\n            setStatus('error');\n            setErrors(combinedErrors);\n          } else {\n            onSubmit({\n              id,\n              event,\n              data,\n              setData,\n              setStatus,\n              setErrors,\n              apiUrl,\n            });\n          }\n        });\n      }}\n    >\n      {status === 'error' ? (\n        <Message type=\"error\">An error occurred. Please try again.</Message>\n      ) : null}\n\n      <WebformContext.Provider\n        value={{\n          id,\n          apiUrl,\n          data,\n          setData,\n          setStatus,\n          errors,\n          registry: componentRegistry,\n          registerField,\n          unregisterField,\n        }}\n      >\n        <WebformForm webform={webformObject} status={status} />\n      </WebformContext.Provider>\n    </form>\n  );\n};\n","import * as React from 'react';\nimport WebformElementWrapper from '../components/wrappers/WebformElementWrapper';\n\n// Example custom component\nexport const WebformHeight = ({ element, error, value, setValue }) => {\n  const onChangeHandler = async (e) => {\n    setValue({ ...value, [e.target.name]: e.target.value });\n  };\n  return (\n    <WebformElementWrapper\n      labelFor={element['#key']}\n      label={element['#title']}\n      isRequired={element['#required']}\n      access={element['#access']}\n      settings={null}\n      error={error}\n    >\n      <div style={{ display: 'inline-flex', alignItems: 'center' }}>\n        <input\n          type=\"number\"\n          name=\"feet\"\n          min={0}\n          max={8}\n          onChange={(e) => onChangeHandler(e)}\n        />\n        <label style={{ padding: '0.5em' }}>feet</label>\n        <input\n          type=\"number\"\n          name=\"inches\"\n          min={0}\n          max={11}\n          onChange={(e) => onChangeHandler(e)}\n        />\n        <label style={{ padding: '0.5em' }}>inches</label>\n      </div>\n    </WebformElementWrapper>\n  );\n};\n","import { NextApiRequest, NextApiResponse } from 'next';\nimport { DrupalClient } from 'next-drupal';\n\nexport async function WebformDefaultApiRoute(\n  request: NextApiRequest,\n  response: NextApiResponse,\n  drupal: DrupalClient,\n) {\n  if (request.method === 'GET') {\n    switch (request.query.op.toString()) {\n      case 'autocomplete_options': {\n        const { id, options_id } = request.query;\n        const url = drupal.buildUrl(\n          `/webform_rest/${id.toString()}/autocomplete_options/${options_id}?_format=json`,\n        );\n        const result = await drupal.fetch(url.toString(), {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n        if (!result.ok) {\n          const message = await result.json();\n          // Send error to client.\n          return response.status(result.status).json({ message });\n        }\n        response.end(JSON.stringify(await result.json()));\n        response.status(200);\n\n        return response;\n      }\n\n      default: {\n        response.end('{}');\n        response.status(404);\n        return response;\n      }\n    }\n  } else if (request.method === 'POST') {\n    const url = drupal.buildUrl('/webform_rest/submit?_format=json');\n    // Submit to Drupal.\n    const result = await drupal.fetch(url.toString(), {\n      method: 'POST',\n      body: JSON.stringify(request.body),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    if (!result.ok) {\n      const message = await result.json();\n      // Send error to client.\n      return response.status(result.status).json({ message });\n    }\n    response.end(JSON.stringify(result));\n    response.status(200);\n\n    return response;\n  }\n}\n"],"names":["getChildElements","containerElement","count","Object","keys","length","i","childWeights","key","charAt","element","weight","push","Math","floor","sort","a","b","map","childWeight","WebformContext","React","createContext","drupalRenderedMarkup","message","_jsx","dangerouslySetInnerHTML","__html","getNormalizedErrorMessages","errors","reduce","currentValue","parts","split","newKey","slice","join","_extends","toPath","toKey","path","filter","item","setIn","obj","value","pathArray","current","currentPath","nextPath","isInteger","Number","isObject","Array","isArray","String","isFunction","object","isIterable","Symbol","iterator","useConstructor","callback","hasBeenCalled","setHasBeenCalled","useState","cssStringToObject","string","result","replace","declaration","property","camelizedProperty","part","toUpperCase","reactPropertyMap","accept","acceptcharset","accesskey","action","allowfullscreen","alt","as","async","autocapitalize","autocomplete","autocorrect","autofocus","autoplay","autosave","capture","cellpadding","cellspacing","challenge","charset","checked","children","cite","class","classid","classname","cols","colspan","content","contenteditable","contextmenu","controls","controlslist","coords","crossorigin","dangerouslysetinnerhtml","data","datetime","default","defaultchecked","defaultvalue","defer","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","for","form","formmethod","formaction","formenctype","formnovalidate","formtarget","frameborder","headers","height","hidden","high","href","hreflang","htmlfor","httpequiv","icon","id","imagesizes","imagesrcset","innerhtml","inputmode","integrity","is","itemid","itemprop","itemref","itemscope","itemtype","keyparams","keytype","kind","label","lang","list","loop","low","manifest","marginwidth","marginheight","max","maxlength","media","mediagroup","method","min","minlength","multiple","muted","name","nomodule","nonce","novalidate","open","optimum","pattern","placeholder","playsinline","poster","preload","profile","radiogroup","readonly","referrerpolicy","rel","required","reversed","role","rows","rowspan","sandbox","scope","scoped","scrolling","seamless","selected","shape","size","sizes","span","spellcheck","src","srcdoc","srclang","srcset","start","step","style","summary","tabindex","target","title","type","usemap","width","wmode","wrap","getIndexOfMultiValue","match","pop","getCurrentError","clientSideError","serverSideError","isValidElement","arrayMerge","source","options","destination","forEach","index","cloneUnlessOtherwiseSpecified","isMergeableObject","deepmerge","indexOf","updateNameAndIdWithIndex","childElements","nestedElement","updatedId","updatedName","resolvePath","prev","curr","self","checkDateMinMax","minAsISO","convertDateToISO","strtotime","maxAsISO","date","Date","toISOString","substring","deleteKeys","normalizeElements","resolveWebformContent","drupal","fetchOptions","url","buildUrl","elementsUrl","elementsResult","Promise","all","fetch","toString","ok","json","Error","normalizedElements","webform","uuid","description","status","confirmation","settings","confirmation_type","confirmation_url","confirmation_message","elements","resolveWebformSubmission","submissionUrl","submissionResult","defaultOnSubmit","setData","setStatus","setErrors","apiUrl","body","webform_id","response","JSON","stringify","error","withDefaultValue","EnhancedComponent","props","useEffect","setValue","normalizeAttributes","attributes","ignoreList","attribute","includes","classNames","withAttributes","_props$element$Attri","_props$fieldProps","_props$element$Label","_props$labelProps","_props$element$Wrapp","_props$wrapperProps","field","fieldProps","labelProps","wrapper","normalizedWrapperAttributes","wrapperProps","getElementName","getConditionState","trigger","RegExp","test","betweenValues","getEffect","effect","getStatesForData","states","allConditionsForTrue","anyConditionForTrue","oneConditionForTrue","webformStates","getStateConditions","indexOrSelector","isNaN","_data$elementName","elementName","prototype","hasOwnProperty","call","console","warn","undefined","values","_data$elementName2","_data$elementName3","effects","every","assign","withStates","WrappedComponent","state","setState","useContext","elementStates","dependencyElements","dependencies","getDependencies","_excluded","WebformElementWrapper","_ref","labelFor","isRequired","descriptionDisplay","descriptionProps","labelDisplay","access","_objectWithoutPropertiesLoose","labelClasses","descriptionClasses","labelElement","className","htmlFor","_jsxs","suppressHydrationWarning","WebformFieldsetWrapper","withWrapper","customConfig","config","defaultWrapperType","displayErrors","wrapperType","hasValidError","WrapperComponent","getLabel","WebformAutocomplete","autocompleteOptions","setAutocompleteOptions","autocompleteValue","setAutocompleteValue","resolveAsyncAutocompleteItems","_Fragment","onChange","e","onChangeHandler","readOnly","supportedTypes","number","email","search","tel","textfield","WebformText","_supportedTypes$eleme","WebformSelect$1","WebformSelect","showOther","setShowOther","optionsForOther","getOptions","arr","unshift","sortOptions","option","entityId","onInput","onInputHandler","WebformTextArea$1","WebformTextArea","WebformDebug","WebformElement","registry","getComponent","CustomComponent","WebformMultifield$1","WebformMultifield","tableProps","trProps","tdProps","normalizedValue","isCustomComposite","remove","TypeError","newValue","splice","renderChildElement","childElement","childKey","parents","currentElement","items","newChildValue","from","renderChildren","compositeElements","resolvedElement","elementItem","parse","maxItems","currentCount","removeButton","onClick","preventDefault","WebformComposite$1","WebformComposite","WebformContainer","parentAndChildStates","previousData","WebformFlexboxLayout$1","WebformFlexboxLayout","itemProps","itemPropsWithDefaults","flexGrow","_createElement","_element$Attributes","_element$Align_items","display","boxSizing","gap","justifyContent","WebformFieldset","WebformSection","WebformTable","theadProps","tbodyProps","row","header","WebformRange","outputElement","below","transform","position","padding","textAlign","border","background","above","bottom","left","marginRight","right","marginLeft","WebformCheckbox","checkedState","setCheckedState","WebformRating","hover","setHover","defaultValue","fill","star","onMouseEnter","onMouseLeave","WebformEmailConfirm$1","WebformEmailConfirm","registerField","email1","setEmail1","email2","setEmail2","validate","WebformValue$1","WebformValue","Modal","onClose","show","WebformTermsOfService","setShow","accessState","setAccessState","regex","exec","WebformDateTime","time","dateTime","re","reWithSeconds","WebformTime$1","WebformTime","_element$Date_time_m","_element$Date_time_m2","WebformDateList","dateList","setDateList","twentyFourHour","isPM","monthAsNum","monthOptions","find","day","year","getFullYear","hour","minute","second","padZero","some","prevState","num","WebformDate","WebformItem","WebformActions","buttons","supportedButtons","submit","reset","WebformButton","radios","checkboxes","webform_radios_other","webform_checkboxes_other","webform_entity_checkboxes","webform_entity_radios","WebformCheckboxRadioGroup$1","WebformCheckboxRadioGroup","valueOther","setValueOther","showInputForOther","setShowInputForOther","withOther","elementForOther","finalOptions","defaultValues","normalizedDefaultValues","hasOwn","filtered","WebformMarkup$1","WebformMarkup","WebformMessage$1","WebformMessage","WebformTableRow$1","WebformTableRow","_element$key$Wrapper","rowAndChildStates","parentAndRowAndChildStates","DebugConfirmation","submission","WizardPage$1","WizardPage","MultiPageForm","currentPage","setCurrentPage","pageElement","showPrevBtn","showSubmitBtn","submitBtnElement","highlightCurrent","color","accessChildrenElements","entries","defaultComponents","textarea","checkbox","entity_autocomplete","range","radio","select","webform_autocomplete","webform_rating","webform_select_other","webform_terms_of_service","container","fieldset","webform_flexbox","webform_section","webform_table","webform_table_row","webform_address","webform_contact","webform_name","webform_link","webform_custom_composite","WebformCustomComposite","isMulti","datelist","webform_time","button","webform_actions","webform_email_confirm","webform_multiple","confirmation_page","ConfirmationPage","form_layout","FormLayout","isMultiPageForm","window","localStorage","setItem","debugData","getItem","renderConfirmationPage","Message","webform_wizard_page","webform_message","webform_markup","defaultComponentRegistry","constructor","_registry","this","_this$_registry$get","get","setComponent","component","set","Map","WebformError","super","Webform","webformObject","customComponents","onSubmit","customOnSubmit","formProps","componentRegistry","fieldRegistry","useRef","useCallback","unregisterField","WebformForm","runFieldValidators","fieldKeysWithValidation","fieldValidations","runSingleFieldLevelValidation","resolve","then","fieldErrorsList","previousValue","currentIndex","event","fieldErrors","validateErrors","combinedErrors","Provider","WebformHeight","alignItems","WebformDefaultApiRoute","request","query","op","options_id","end"],"mappings":"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"}